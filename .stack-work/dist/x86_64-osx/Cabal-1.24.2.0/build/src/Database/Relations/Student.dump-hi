
==================== FINAL INTERFACE ====================
2018-01-21 07:10:51.781793 UTC

interface Research-0.1.0.0-Hn4FdcrWuuOKVDFLG4379u:Database.Relations.Student [family instance module] 8002
  interface hash: ac0aa06f4e1c144162eb59d9fde12e8e
  ABI hash: 7d94e9ecfbca41d2a0c7c904e7ba3289
  export-list hash: 26481ebac2346a26b6d558ee88f43ebe
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 5320a755f0678d3de6dbb8c17ea710e9
  sig of: Nothing
  used TH splices: True
  where
exports:
  Database.Relations.Student.columnOffsetsStudent
  Database.Relations.Student.department'
  Database.Relations.Student.faculty'
  Database.Relations.Student.insertQueryStudent
  Database.Relations.Student.insertStudent
  Database.Relations.Student.name'
  Database.Relations.Student.selectStudent
  Database.Relations.Student.semester'
  Database.Relations.Student.student
  Database.Relations.Student.studentId'
  Database.Relations.Student.studentNumber'
  Database.Relations.Student.tableOfStudent
  Database.Relations.Student.updateStudent
  Database.Relations.Student.Student{Database.Relations.Student.Student department faculty name semester studentId studentNumber}
module dependencies: Database.Record.TH.PostgreSQL
package dependencies: HDBC-2.4.0.2@HDBC-2.4.0.2-CMf0h3SvMqFJUriR2hhqrA
                      HDBC-postgresql-2.3.2.5@HDBC-postgresql-2.3.2.5-8DjPA5M2Phy2z1B24f9HKN
                      HDBC-session-0.1.1.1@HDBC-session-0.1.1.1-8iI0BgP0QiAFY1v4elsx1d
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      convertible-1.1.1.0@convertible-1.1.1.0-FM6RC8n6JG91WdGj8q2BzE
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      names-th-0.2.0.3@names-th-0.2.0.3-FWd9uhhaPk73vacdw3xBxG
                      old-locale-1.0.0.7@old-locale-1.0.0.7-KGBP1BSKxH5GCm0LnZP04j
                      old-time-1.1.0.3@old-time-1.1.0.3-KWRsMSdY26c2L27Y9n9cyq
                      parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX
                      persistable-record-0.5.1.1@persistable-record-0.5.1.1-8Nzb50WMmIH2ecrfnqIMY
                      pretty-1.1.3.3@pretty-1.1.3.3
                      relational-query-0.9.5.0@relational-query-0.9.5.0-17dprTVhIzzB8eMhOSb3o8
                      relational-query-HDBC-0.6.4.1@relational-query-HDBC-0.6.4.1-9QB1S93pLy24XYDJQMAff0
                      relational-schemas-0.1.4.1@relational-schemas-0.1.4.1-D8GFg9X4V2sD9u4K7gADAa
                      sql-words-0.1.5.1@sql-words-0.1.5.1-6ekOanNrtOKYD1ABcjRAD
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      th-data-compat-0.0.2.4@th-data-compat-0.0.2.4-GbISCvWnyQk60k5xubIzhH
                      th-reify-compat-0.0.1.3@th-reify-compat-0.0.1.3-FdL2m7tyb2p89Gevm936I5
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      transformers-0.5.2.0@transformers-0.5.2.0
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         convertible-1.1.1.0@convertible-1.1.1.0-FM6RC8n6JG91WdGj8q2BzE:Data.Convertible.Instances.C
         convertible-1.1.1.0@convertible-1.1.1.0-FM6RC8n6JG91WdGj8q2BzE:Data.Convertible.Instances.Map
         convertible-1.1.1.0@convertible-1.1.1.0-FM6RC8n6JG91WdGj8q2BzE:Data.Convertible.Instances.Num
         convertible-1.1.1.0@convertible-1.1.1.0-FM6RC8n6JG91WdGj8q2BzE:Data.Convertible.Instances.Text
         convertible-1.1.1.0@convertible-1.1.1.0-FM6RC8n6JG91WdGj8q2BzE:Data.Convertible.Instances.Time
         persistable-record-0.5.1.1@persistable-record-0.5.1.1-8Nzb50WMmIH2ecrfnqIMY:Database.Record.Instances
         persistable-record-0.5.1.1@persistable-record-0.5.1.1-8Nzb50WMmIH2ecrfnqIMY:Database.Record.TupleInstances
         relational-query-0.9.5.0@relational-query-0.9.5.0-17dprTVhIzzB8eMhOSb3o8:Database.Relational.Query.Monad.Aggregate
         relational-query-0.9.5.0@relational-query-0.9.5.0-17dprTVhIzzB8eMhOSb3o8:Database.Relational.Query.Projection
         relational-query-0.9.5.0@relational-query-0.9.5.0-17dprTVhIzzB8eMhOSb3o8:Database.Relational.Query.Pure
         relational-query-0.9.5.0@relational-query-0.9.5.0-17dprTVhIzzB8eMhOSb3o8:Database.Relational.Query.TupleInstances
         relational-query-HDBC-0.6.4.1@relational-query-HDBC-0.6.4.1-9QB1S93pLy24XYDJQMAff0:Database.HDBC.Record.Persistable
         relational-query-HDBC-0.6.4.1@relational-query-HDBC-0.6.4.1-9QB1S93pLy24XYDJQMAff0:Database.HDBC.Schema.PostgreSQL
         relational-query-HDBC-0.6.4.1@relational-query-HDBC-0.6.4.1-9QB1S93pLy24XYDJQMAff0:Database.HDBC.SqlValueExtra
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         relational-schemas-0.1.4.1@relational-schemas-0.1.4.1-D8GFg9X4V2sD9u4K7gADAa:Database.Relational.Schema.PgCatalog.PgAttribute
                         relational-schemas-0.1.4.1@relational-schemas-0.1.4.1-D8GFg9X4V2sD9u4K7gADAa:Database.Relational.Schema.PgCatalog.PgClass
                         relational-schemas-0.1.4.1@relational-schemas-0.1.4.1-D8GFg9X4V2sD9u4K7gADAa:Database.Relational.Schema.PgCatalog.PgConstraint
                         relational-schemas-0.1.4.1@relational-schemas-0.1.4.1-D8GFg9X4V2sD9u4K7gADAa:Database.Relational.Schema.PgCatalog.PgNamespace
                         relational-schemas-0.1.4.1@relational-schemas-0.1.4.1-D8GFg9X4V2sD9u4K7gADAa:Database.Relational.Schema.PgCatalog.PgType
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
import  -/  HDBC-2.4.0.2@HDBC-2.4.0.2-CMf0h3SvMqFJUriR2hhqrA:Database.HDBC.SqlValue 81c8c7ba328011d887c39476cf67caed
import  -/  Database.Record.TH.PostgreSQL e196b55e2d7637d108cfb8ab34ba8970
  exports: b41da3922b09972de925422838a4011b
  defineTable ba3c3261311faca2b170936a284e77d6
import  -/  array-0.5.1.1@array-0.5.1.1:Data.Array.Base a1a813de21dd195f39f7a053a2142a3f
import  -/  base-4.9.1.0:GHC.Arr dbae05e7a9c0aba55cc706ecf0406507
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Generics 1dbec2bc7dd1c5bd8c89ed857eaed19b
import  -/  base-4.9.1.0:GHC.Int e6f85fcab22769385fba2b5fce0acb40
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  persistable-record-0.5.1.1@persistable-record-0.5.1.1-8Nzb50WMmIH2ecrfnqIMY:Database.Record.FromSql 7e729004faa8af09889fb54a8ec3b92b
import  -/  persistable-record-0.5.1.1@persistable-record-0.5.1.1-8Nzb50WMmIH2ecrfnqIMY:Database.Record.KeyConstraint f4c8f549cd6adb080f72864b8e8b54bc
import  -/  persistable-record-0.5.1.1@persistable-record-0.5.1.1-8Nzb50WMmIH2ecrfnqIMY:Database.Record.Persistable 1ebca24166184a0800431fb6bdcb7f49
import  -/  persistable-record-0.5.1.1@persistable-record-0.5.1.1-8Nzb50WMmIH2ecrfnqIMY:Database.Record.ToSql 7ad42e7383d6911ede7b6e736e9e6eb8
import  -/  relational-query-0.9.5.0@relational-query-0.9.5.0-17dprTVhIzzB8eMhOSb3o8:Database.Relational.Query.Constraint 67b0f3b3e330dcc1b5e2bf7370efda97
import  -/  relational-query-0.9.5.0@relational-query-0.9.5.0-17dprTVhIzzB8eMhOSb3o8:Database.Relational.Query.Derives 6554064bbd92332a7e60a76713dfeb35
import  -/  relational-query-0.9.5.0@relational-query-0.9.5.0-17dprTVhIzzB8eMhOSb3o8:Database.Relational.Query.Monad.BaseType 0d6f3b243e166c0bee65a69da6258818
import  -/  relational-query-0.9.5.0@relational-query-0.9.5.0-17dprTVhIzzB8eMhOSb3o8:Database.Relational.Query.Pi c1150b1e2b5dc241ff85f9aac6a6e86d
import  -/  relational-query-0.9.5.0@relational-query-0.9.5.0-17dprTVhIzzB8eMhOSb3o8:Database.Relational.Query.Pi.Unsafe 74dd2540171737cd8688c8680a12feb9
import  -/  relational-query-0.9.5.0@relational-query-0.9.5.0-17dprTVhIzzB8eMhOSb3o8:Database.Relational.Query.ProjectableClass b60bb16c0a3267d92438e804b95c5114
import  -/  relational-query-0.9.5.0@relational-query-0.9.5.0-17dprTVhIzzB8eMhOSb3o8:Database.Relational.Query.Relation b88e647d987f06689e2bd0841aedb368
import  -/  relational-query-0.9.5.0@relational-query-0.9.5.0-17dprTVhIzzB8eMhOSb3o8:Database.Relational.Query.Table 6b446be5743f5d6378c268c137ce27d6
import  -/  relational-query-0.9.5.0@relational-query-0.9.5.0-17dprTVhIzzB8eMhOSb3o8:Database.Relational.Query.Type d1402393a966655860ff9f46dcc3e30b
f8b27d68bc355eaf4dff6876392cc31e
  $fFromSqlSqlValueStudent ::
    Database.Record.FromSql.FromSql
      Database.HDBC.SqlValue.SqlValue Database.Relations.Student.Student
  DFunId
  {- Arity: 1, Strictness: <L,U>m, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Database.Relations.Student.$fFromSqlSqlValueStudent_$crecordFromSql
                  `cast`
                (Sym (Database.Record.FromSql.N:FromSql[0]) <Database.HDBC.SqlValue.SqlValue>_N <Database.Relations.Student.Student>_N) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fFromSqlSqlValueStudent1 ::
    [Database.HDBC.SqlValue.SqlValue]
    -> (Database.Relations.Student.Student,
        [Database.HDBC.SqlValue.SqlValue])
  {- Arity: 1, Strictness: <L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [Database.HDBC.SqlValue.SqlValue]) ->
                 case Database.Relations.Student.$w$crecordFromSql
                        w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fFromSqlSqlValueStudent_$crecordFromSql ::
    Database.Record.FromSql.RecordFromSql
      Database.HDBC.SqlValue.SqlValue Database.Relations.Student.Student
  {- Arity: 1, Strictness: <L,U>m,
     Unfolding: InlineRule (0, True, True)
                Database.Relations.Student.$fFromSqlSqlValueStudent1
                  `cast`
                (Sym (Database.Record.FromSql.N:RecordFromSql[0]
                          <Database.HDBC.SqlValue.SqlValue>_R
                          <Database.Relations.Student.Student>_R)) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fGenericStudent ::
    GHC.Generics.Generic Database.Relations.Student.Student
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Database.Relations.Student.Student
                  Database.Relations.Student.$fGenericStudent_$cfrom
                  Database.Relations.Student.$fGenericStudent_$cto -}
f8b27d68bc355eaf4dff6876392cc31e
  $fGenericStudent1 ::
    Database.Relations.Student.Student
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Student" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "studentId")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.SourceStrict
                'GHC.Generics.DecidedUnpack)
             (GHC.Generics.K1 GHC.Generics.R GHC.Int.Int32)
           GHC.Generics.:*: (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "studentNumber")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.SourceStrict
                                  'GHC.Generics.DecidedUnpack)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Int.Int32)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "name")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.SourceStrict
                                                   'GHC.Generics.DecidedStrict)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "faculty")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.SourceStrict
                                 'GHC.Generics.DecidedStrict)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "department")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.SourceStrict
                                                   'GHC.Generics.DecidedStrict)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "semester")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.SourceStrict
                                                                    'GHC.Generics.DecidedStrict)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    GHC.Base.String))))
         x
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSSSS),1*U(U,U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Database.Relations.Student.Student) ->
                 case x1 of wild { Database.Relations.Student.Student dt dt1 g3 g4 g5 g6 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "studentId")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.SourceStrict
                            'GHC.Generics.DecidedUnpack)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Int.Int32)
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "studentNumber")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.SourceStrict
                                              'GHC.Generics.DecidedUnpack)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Int.Int32)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "name")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.SourceStrict
                                                               'GHC.Generics.DecidedStrict)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String)))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "faculty")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.SourceStrict
                            'GHC.Generics.DecidedStrict)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "department")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.SourceStrict
                                              'GHC.Generics.DecidedStrict)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "semester")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.SourceStrict
                                                               'GHC.Generics.DecidedStrict)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String)))
                    @ x
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "studentId")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.SourceStrict
                               'GHC.Generics.DecidedUnpack)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Int.Int32))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "studentNumber")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.SourceStrict
                               'GHC.Generics.DecidedUnpack)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Int.Int32)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "name")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.SourceStrict
                                                'GHC.Generics.DecidedStrict)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ x
                       (GHC.Int.I32# dt)
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Int.Int32>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "studentId")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.SourceStrict
                                         'GHC.Generics.DecidedUnpack>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Int.Int32>_R) <x>_N))
                       (GHC.Generics.:*:
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "studentNumber")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.SourceStrict
                                  'GHC.Generics.DecidedUnpack)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Int.Int32))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "name")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.SourceStrict
                                  'GHC.Generics.DecidedStrict)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                          @ x
                          (GHC.Int.I32# dt1)
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P <GHC.Int.Int32>_R <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "studentNumber")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.SourceStrict
                                            'GHC.Generics.DecidedUnpack>_P
                                         <GHC.Generics.K1 GHC.Generics.R GHC.Int.Int32>_R) <x>_N))
                          g3
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "name")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.SourceStrict
                                            'GHC.Generics.DecidedStrict>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Base.String>_R) <x>_N))))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "faculty")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.SourceStrict
                               'GHC.Generics.DecidedStrict)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "department")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.SourceStrict
                               'GHC.Generics.DecidedStrict)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "semester")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.SourceStrict
                                                'GHC.Generics.DecidedStrict)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ x
                       g4
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "faculty")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.SourceStrict
                                         'GHC.Generics.DecidedStrict>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))
                       (GHC.Generics.:*:
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "department")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.SourceStrict
                                  'GHC.Generics.DecidedStrict)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "semester")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.SourceStrict
                                  'GHC.Generics.DecidedStrict)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                          @ x
                          g5
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "department")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.SourceStrict
                                            'GHC.Generics.DecidedStrict>_P
                                         <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))
                          g6
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "semester")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.SourceStrict
                                            'GHC.Generics.DecidedStrict>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Base.String>_R) <x>_N)))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "Student" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "studentId")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.SourceStrict
                                  'GHC.Generics.DecidedUnpack)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Int.Int32)
                             GHC.Generics.:*: (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "studentNumber")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.SourceStrict
                                                    'GHC.Generics.DecidedUnpack)
                                                 (GHC.Generics.K1 GHC.Generics.R GHC.Int.Int32)
                                               GHC.Generics.:*: GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "name")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.SourceStrict
                                                                     'GHC.Generics.DecidedStrict)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R
                                                                     GHC.Base.String)))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "faculty")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.SourceStrict
                                                   'GHC.Generics.DecidedStrict)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "department")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.SourceStrict
                                                                     'GHC.Generics.DecidedStrict)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R GHC.Base.String)
                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                   GHC.Generics.S
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Base.Just
                                                                                         "semester")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.SourceStrict
                                                                                      'GHC.Generics.DecidedStrict)
                                                                                   (GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      GHC.Base.String)))>_R) <x>_N) }) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fGenericStudent_$cfrom ::
    Database.Relations.Student.Student
    -> GHC.Generics.Rep Database.Relations.Student.Student x
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSSSS),1*U(U,U,U,U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Database.Relations.Student.$fGenericStudent1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Database.Relations.Student.Student>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "Student"
                                       "Database.Relations.Student"
                                       "Research-0.1.0.0-Hn4FdcrWuuOKVDFLG4379u"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "Student" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       ((GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "studentId")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.SourceStrict
                                              'GHC.Generics.DecidedUnpack)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Int.Int32)
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "studentNumber")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.SourceStrict
                                                                'GHC.Generics.DecidedUnpack)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Int.Int32)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "name")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.SourceStrict
                                                                                 'GHC.Generics.DecidedStrict)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Base.String)))
                                        GHC.Generics.:*: (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "faculty")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.SourceStrict
                                                               'GHC.Generics.DecidedStrict)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String)
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "department")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.SourceStrict
                                                                                 'GHC.Generics.DecidedStrict)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Base.String)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "semester")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.SourceStrict
                                                                                                  'GHC.Generics.DecidedStrict)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Base.String))))>_R))
                          (Sub (Sym (Database.Relations.Student.Rep_Student[0]))) <x>_N) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fGenericStudent_$cto ::
    GHC.Generics.Rep Database.Relations.Student.Student x
    -> Database.Relations.Student.Student
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(SS(SS))S(SS(SS))),1*U(1*U(U,1*U(U,U)),1*U(U,1*U(U,U)))>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ x
                   (w :: GHC.Generics.Rep Database.Relations.Student.Student x) ->
                 case w `cast`
                      (Trans
                           (Sub (Database.Relations.Student.Rep_Student[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "Student"
                                        "Database.Relations.Student"
                                        "Research-0.1.0.0-Hn4FdcrWuuOKVDFLG4379u"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.C1
                                        ('GHC.Generics.MetaCons
                                           "Student" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "studentId")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.SourceStrict
                                               'GHC.Generics.DecidedUnpack)
                                            (GHC.Generics.Rec0 GHC.Int.Int32)
                                          GHC.Generics.:*: (GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "studentNumber")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.SourceStrict
                                                                 'GHC.Generics.DecidedUnpack)
                                                              (GHC.Generics.Rec0 GHC.Int.Int32)
                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "name")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.SourceStrict
                                                                                  'GHC.Generics.DecidedStrict)
                                                                               (GHC.Generics.Rec0
                                                                                  GHC.Base.String)))
                                         GHC.Generics.:*: (GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "faculty")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.SourceStrict
                                                                'GHC.Generics.DecidedStrict)
                                                             (GHC.Generics.Rec0 GHC.Base.String)
                                                           GHC.Generics.:*: (GHC.Generics.S1
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "department")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.SourceStrict
                                                                                  'GHC.Generics.DecidedStrict)
                                                                               (GHC.Generics.Rec0
                                                                                  GHC.Base.String)
                                                                             GHC.Generics.:*: GHC.Generics.S1
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "semester")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.SourceStrict
                                                                                                   'GHC.Generics.DecidedStrict)
                                                                                                (GHC.Generics.Rec0
                                                                                                   GHC.Base.String))))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Student" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "studentId")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.SourceStrict
                                            'GHC.Generics.DecidedUnpack)
                                         (GHC.Generics.Rec0 GHC.Int.Int32)
                                       GHC.Generics.:*: (GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "studentNumber")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.SourceStrict
                                                              'GHC.Generics.DecidedUnpack)
                                                           (GHC.Generics.Rec0 GHC.Int.Int32)
                                                         GHC.Generics.:*: GHC.Generics.S1
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "name")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.SourceStrict
                                                                               'GHC.Generics.DecidedStrict)
                                                                            (GHC.Generics.Rec0
                                                                               GHC.Base.String)))
                                      GHC.Generics.:*: (GHC.Generics.S1
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "faculty")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.SourceStrict
                                                             'GHC.Generics.DecidedStrict)
                                                          (GHC.Generics.Rec0 GHC.Base.String)
                                                        GHC.Generics.:*: (GHC.Generics.S1
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "department")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.SourceStrict
                                                                               'GHC.Generics.DecidedStrict)
                                                                            (GHC.Generics.Rec0
                                                                               GHC.Base.String)
                                                                          GHC.Generics.:*: GHC.Generics.S1
                                                                                             ('GHC.Generics.MetaSel
                                                                                                ('GHC.Base.Just
                                                                                                   "semester")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.SourceStrict
                                                                                                'GHC.Generics.DecidedStrict)
                                                                                             (GHC.Generics.Rec0
                                                                                                GHC.Base.String)))>_R)) <x>_N) of ww { GHC.Generics.:*: ww1 ww2 ->
                 case ww1 of ww3 { GHC.Generics.:*: ww4 ww5 ->
                 case ww5 of ww6 { GHC.Generics.:*: ww7 ww8 ->
                 case ww2 of ww9 { GHC.Generics.:*: ww10 ww11 ->
                 case ww11 of ww12 { GHC.Generics.:*: ww13 ww14 ->
                 case ww4
                        `cast`
                      (Trans
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.S>_P
                                <'GHC.Generics.MetaSel
                                   ('GHC.Base.Just "studentId")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.SourceStrict
                                   'GHC.Generics.DecidedUnpack>_P
                                <GHC.Generics.K1 GHC.Generics.R GHC.Int.Int32>_R <x>_N)
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P
                                <GHC.Int.Int32>_R
                                <x>_P)) of dt { GHC.Int.I32# dt1 ->
                 case ww7
                        `cast`
                      (Trans
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.S>_P
                                <'GHC.Generics.MetaSel
                                   ('GHC.Base.Just "studentNumber")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.SourceStrict
                                   'GHC.Generics.DecidedUnpack>_P
                                <GHC.Generics.K1 GHC.Generics.R GHC.Int.Int32>_R <x>_N)
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P
                                <GHC.Int.Int32>_R
                                <x>_P)) of dt2 { GHC.Int.I32# dt3 ->
                 case ww8
                        `cast`
                      (Trans
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.S>_P
                                <'GHC.Generics.MetaSel
                                   ('GHC.Base.Just "name")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.SourceStrict
                                   'GHC.Generics.DecidedStrict>_P
                                <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P)) of dt4 { DEFAULT ->
                 case ww10
                        `cast`
                      (Trans
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.S>_P
                                <'GHC.Generics.MetaSel
                                   ('GHC.Base.Just "faculty")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.SourceStrict
                                   'GHC.Generics.DecidedStrict>_P
                                <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P)) of dt5 { DEFAULT ->
                 case ww13
                        `cast`
                      (Trans
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.S>_P
                                <'GHC.Generics.MetaSel
                                   ('GHC.Base.Just "department")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.SourceStrict
                                   'GHC.Generics.DecidedStrict>_P
                                <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P)) of dt6 { DEFAULT ->
                 case ww14
                        `cast`
                      (Trans
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.S>_P
                                <'GHC.Generics.MetaSel
                                   ('GHC.Base.Just "semester")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.SourceStrict
                                   'GHC.Generics.DecidedStrict>_P
                                <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P)) of dt7 { DEFAULT ->
                 Database.Relations.Student.Student
                   dt1
                   dt3
                   dt4
                   dt5
                   dt6
                   dt7 } } } } } } } } } } }) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fHasColumnConstraintNotNullStudent ::
    Database.Record.KeyConstraint.HasColumnConstraint
      Database.Record.KeyConstraint.NotNull
      Database.Relations.Student.Student
  DFunId
  {- Strictness: m, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Database.Relations.Student.$fHasColumnConstraintNotNullStudent_$ccolumnConstraint
                  `cast`
                (Sym (Database.Record.KeyConstraint.N:HasColumnConstraint[0]) <Database.Record.KeyConstraint.NotNull>_N <Database.Relations.Student.Student>_N) -}
786bfb399212386194a6c3c8d2a69fcb
  $fHasColumnConstraintNotNullStudent1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fHasColumnConstraintNotNullStudent_$ccolumnConstraint ::
    Database.Record.KeyConstraint.ColumnConstraint
      Database.Record.KeyConstraint.NotNull
      Database.Relations.Student.Student
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Database.Relations.Student.$fHasColumnConstraintNotNullStudent1
                  `cast`
                (Sym (Database.Record.KeyConstraint.N:ColumnConstraint[0]
                          <Database.Record.KeyConstraint.NotNull>_P
                          <Database.Relations.Student.Student>_P)) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fHasColumnConstraintPrimaryStudent ::
    Database.Record.KeyConstraint.HasColumnConstraint
      Database.Record.KeyConstraint.Primary
      Database.Relations.Student.Student
  DFunId
  {- Strictness: m, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Database.Relations.Student.$fHasColumnConstraintPrimaryStudent_$ccolumnConstraint
                  `cast`
                (Sym (Database.Record.KeyConstraint.N:HasColumnConstraint[0]) <Database.Record.KeyConstraint.Primary>_N <Database.Relations.Student.Student>_N) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fHasColumnConstraintPrimaryStudent_$ccolumnConstraint ::
    Database.Record.KeyConstraint.ColumnConstraint
      Database.Record.KeyConstraint.Primary
      Database.Relations.Student.Student
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Database.Relations.Student.$fHasColumnConstraintNotNullStudent1
                  `cast`
                (Sym (Database.Record.KeyConstraint.N:ColumnConstraint[0]
                          <Database.Record.KeyConstraint.Primary>_P
                          <Database.Relations.Student.Student>_P)) -}
10ffdb4637a65ddaa89ea2d8e62aa089
  $fHasConstraintKeyPrimaryStudentInt1 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Database.Relations.Student.$fHasColumnConstraintNotNullStudent1
                   (GHC.Types.[] @ GHC.Types.Int)) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fHasConstraintKeyPrimaryStudentInt32 ::
    Database.Relational.Query.Constraint.HasConstraintKey
      Database.Record.KeyConstraint.Primary
      Database.Relations.Student.Student
      GHC.Int.Int32
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Database.Record.KeyConstraint.Primary
                  @ Database.Relations.Student.Student
                  @ GHC.Int.Int32
                  (Database.Record.Persistable.unsafeValueWidth @ GHC.Int.Int32)
                    `cast`
                  (Sym (Database.Record.Persistable.N:PersistableWidth[0]) <GHC.Int.Int32>_N)
                  Database.Relations.Student.$fHasConstraintKeyPrimaryStudentInt32_$cconstraintKey -}
f8b27d68bc355eaf4dff6876392cc31e
  $fHasConstraintKeyPrimaryStudentInt32_$cconstraintKey ::
    Database.Relational.Query.Constraint.Key
      Database.Record.KeyConstraint.Primary
      Database.Relations.Student.Student
      GHC.Int.Int32
  {- Strictness: m,
     Unfolding: (Database.Relational.Query.Constraint.Key
                   @ Database.Record.KeyConstraint.Primary
                   @ Database.Relations.Student.Student
                   @ GHC.Int.Int32
                   Database.Relations.Student.$fHasConstraintKeyPrimaryStudentInt1
                   (Database.Record.Persistable.unsafeValueWidth @ GHC.Int.Int32)) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fHasKeyConstraintPrimaryStudent ::
    Database.Record.KeyConstraint.HasKeyConstraint
      Database.Record.KeyConstraint.Primary
      Database.Relations.Student.Student
  DFunId
  {- Strictness: m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Database.Relations.Student.$fHasKeyConstraintPrimaryStudent_$ckeyConstraint
                  `cast`
                (Sym (Database.Record.KeyConstraint.N:HasKeyConstraint[0]) <Database.Record.KeyConstraint.Primary>_N <Database.Relations.Student.Student>_N) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fHasKeyConstraintPrimaryStudent_$ckeyConstraint ::
    Database.Record.KeyConstraint.KeyConstraint
      Database.Record.KeyConstraint.Primary
      Database.Relations.Student.Student
  {- Strictness: m2,
     Unfolding: InlineRule (0, True, True)
                Database.Relations.Student.$fHasConstraintKeyPrimaryStudentInt1
                  `cast`
                (Sym (Database.Record.KeyConstraint.N:KeyConstraint[0]
                          <Database.Record.KeyConstraint.Primary>_P
                          <Database.Relations.Student.Student>_P)) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fPersistableWidthStudent ::
    Database.Record.Persistable.PersistableWidth
      Database.Relations.Student.Student
  DFunId
  {- Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Database.Relations.Student.$fPersistableWidthStudent_$s$dmpersistableWidth
                  `cast`
                (Sym (Database.Record.Persistable.N:PersistableWidth[0]) <Database.Relations.Student.Student>_N) -}
9bdc2d7dcf9950aa2ddacca894d80aba
  $fPersistableWidthStudent1 ::
    Database.Record.Persistable.GFieldWidthList
      (GHC.Generics.D1
         ('GHC.Generics.MetaData
            "Student"
            "Database.Relations.Student"
            "Research-0.1.0.0-Hn4FdcrWuuOKVDFLG4379u"
            'GHC.Types.False)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "Student" 'GHC.Generics.PrefixI 'GHC.Types.True)
            ((GHC.Generics.S1
                ('GHC.Generics.MetaSel
                   ('GHC.Base.Just "studentId")
                   'GHC.Generics.NoSourceUnpackedness
                   'GHC.Generics.SourceStrict
                   'GHC.Generics.DecidedUnpack)
                (GHC.Generics.Rec0 GHC.Int.Int32)
              GHC.Generics.:*: (GHC.Generics.S1
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "studentNumber")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.SourceStrict
                                     'GHC.Generics.DecidedUnpack)
                                  (GHC.Generics.Rec0 GHC.Int.Int32)
                                GHC.Generics.:*: GHC.Generics.S1
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "name")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.SourceStrict
                                                      'GHC.Generics.DecidedStrict)
                                                   (GHC.Generics.Rec0 GHC.Base.String)))
             GHC.Generics.:*: (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "faculty")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.SourceStrict
                                    'GHC.Generics.DecidedStrict)
                                 (GHC.Generics.Rec0 GHC.Base.String)
                               GHC.Generics.:*: (GHC.Generics.S1
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "department")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.SourceStrict
                                                      'GHC.Generics.DecidedStrict)
                                                   (GHC.Generics.Rec0 GHC.Base.String)
                                                 GHC.Generics.:*: GHC.Generics.S1
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "semester")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.SourceStrict
                                                                       'GHC.Generics.DecidedStrict)
                                                                    (GHC.Generics.Rec0
                                                                       GHC.Base.String))))))
  {- Arity: 1, Strictness: <L,U>m2,
     Unfolding: InlineRule (0, True, True)
                Database.Relations.Student.$fPersistableWidthStudent2
                  `cast`
                (Trans
                     (forall (a2 :: <*>_N).
                      Trans
                          (Sym (Data.DList.N:DList[0] <GHC.Types.Int>_R))
                          (Trans
                               (Sym (Data.Functor.Const.N:Const[0]
                                         <*>_N
                                         <Data.DList.DList GHC.Types.Int>_R
                                         <GHC.Generics.M1
                                            GHC.Generics.D
                                            ('GHC.Generics.MetaData
                                               "Student"
                                               "Database.Relations.Student"
                                               "Research-0.1.0.0-Hn4FdcrWuuOKVDFLG4379u"
                                               'GHC.Types.False)
                                            (GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "Student" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                               ((GHC.Generics.S1
                                                   ('GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "studentId")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.SourceStrict
                                                      'GHC.Generics.DecidedUnpack)
                                                   (GHC.Generics.Rec0 GHC.Int.Int32)
                                                 GHC.Generics.:*: (GHC.Generics.S1
                                                                     ('GHC.Generics.MetaSel
                                                                        ('GHC.Base.Just
                                                                           "studentNumber")
                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                        'GHC.Generics.SourceStrict
                                                                        'GHC.Generics.DecidedUnpack)
                                                                     (GHC.Generics.Rec0
                                                                        GHC.Int.Int32)
                                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                                      ('GHC.Generics.MetaSel
                                                                                         ('GHC.Base.Just
                                                                                            "name")
                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                         'GHC.Generics.SourceStrict
                                                                                         'GHC.Generics.DecidedStrict)
                                                                                      (GHC.Generics.Rec0
                                                                                         GHC.Base.String)))
                                                GHC.Generics.:*: (GHC.Generics.S1
                                                                    ('GHC.Generics.MetaSel
                                                                       ('GHC.Base.Just "faculty")
                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                       'GHC.Generics.SourceStrict
                                                                       'GHC.Generics.DecidedStrict)
                                                                    (GHC.Generics.Rec0
                                                                       GHC.Base.String)
                                                                  GHC.Generics.:*: (GHC.Generics.S1
                                                                                      ('GHC.Generics.MetaSel
                                                                                         ('GHC.Base.Just
                                                                                            "department")
                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                         'GHC.Generics.SourceStrict
                                                                                         'GHC.Generics.DecidedStrict)
                                                                                      (GHC.Generics.Rec0
                                                                                         GHC.Base.String)
                                                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                                                       ('GHC.Generics.MetaSel
                                                                                                          ('GHC.Base.Just
                                                                                                             "semester")
                                                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                                                          'GHC.Generics.SourceStrict
                                                                                                          'GHC.Generics.DecidedStrict)
                                                                                                       (GHC.Generics.Rec0
                                                                                                          GHC.Base.String)))))
                                            a2>_P))
                               (Sym (Database.Record.Persistable.N:ProductConst[0]) <Data.DList.DList
                                                                                       GHC.Types.Int>_N <GHC.Generics.M1
                                                                                                           GHC.Generics.D
                                                                                                           ('GHC.Generics.MetaData
                                                                                                              "Student"
                                                                                                              "Database.Relations.Student"
                                                                                                              "Research-0.1.0.0-Hn4FdcrWuuOKVDFLG4379u"
                                                                                                              'GHC.Types.False)
                                                                                                           (GHC.Generics.M1
                                                                                                              GHC.Generics.C
                                                                                                              ('GHC.Generics.MetaCons
                                                                                                                 "Student"
                                                                                                                 'GHC.Generics.PrefixI
                                                                                                                 'GHC.Types.True)
                                                                                                              ((GHC.Generics.S1
                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                     ('GHC.Base.Just
                                                                                                                        "studentId")
                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                     'GHC.Generics.SourceStrict
                                                                                                                     'GHC.Generics.DecidedUnpack)
                                                                                                                  (GHC.Generics.Rec0
                                                                                                                     GHC.Int.Int32)
                                                                                                                GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                       ('GHC.Base.Just
                                                                                                                                          "studentNumber")
                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                       'GHC.Generics.SourceStrict
                                                                                                                                       'GHC.Generics.DecidedUnpack)
                                                                                                                                    (GHC.Generics.Rec0
                                                                                                                                       GHC.Int.Int32)
                                                                                                                                  GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                                        ('GHC.Base.Just
                                                                                                                                                           "name")
                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                        'GHC.Generics.SourceStrict
                                                                                                                                                        'GHC.Generics.DecidedStrict)
                                                                                                                                                     (GHC.Generics.Rec0
                                                                                                                                                        GHC.Base.String)))
                                                                                                               GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                                      ('GHC.Base.Just
                                                                                                                                         "faculty")
                                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                                      'GHC.Generics.SourceStrict
                                                                                                                                      'GHC.Generics.DecidedStrict)
                                                                                                                                   (GHC.Generics.Rec0
                                                                                                                                      GHC.Base.String)
                                                                                                                                 GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                                        ('GHC.Base.Just
                                                                                                                                                           "department")
                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                        'GHC.Generics.SourceStrict
                                                                                                                                                        'GHC.Generics.DecidedStrict)
                                                                                                                                                     (GHC.Generics.Rec0
                                                                                                                                                        GHC.Base.String)
                                                                                                                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                                      ('GHC.Generics.MetaSel
                                                                                                                                                                         ('GHC.Base.Just
                                                                                                                                                                            "semester")
                                                                                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                         'GHC.Generics.SourceStrict
                                                                                                                                                                         'GHC.Generics.DecidedStrict)
                                                                                                                                                                      (GHC.Generics.Rec0
                                                                                                                                                                         GHC.Base.String)))))
                                                                                                           a2>_N)))
                     (Sym (Database.Record.Persistable.N:GFieldWidthList[0]
                               <GHC.Generics.M1
                                  GHC.Generics.D
                                  ('GHC.Generics.MetaData
                                     "Student"
                                     "Database.Relations.Student"
                                     "Research-0.1.0.0-Hn4FdcrWuuOKVDFLG4379u"
                                     'GHC.Types.False)
                                  (GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Student" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     ((GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "studentId")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.SourceStrict
                                            'GHC.Generics.DecidedUnpack)
                                         (GHC.Generics.Rec0 GHC.Int.Int32)
                                       GHC.Generics.:*: (GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "studentNumber")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.SourceStrict
                                                              'GHC.Generics.DecidedUnpack)
                                                           (GHC.Generics.Rec0 GHC.Int.Int32)
                                                         GHC.Generics.:*: GHC.Generics.S1
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "name")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.SourceStrict
                                                                               'GHC.Generics.DecidedStrict)
                                                                            (GHC.Generics.Rec0
                                                                               GHC.Base.String)))
                                      GHC.Generics.:*: (GHC.Generics.S1
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "faculty")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.SourceStrict
                                                             'GHC.Generics.DecidedStrict)
                                                          (GHC.Generics.Rec0 GHC.Base.String)
                                                        GHC.Generics.:*: (GHC.Generics.S1
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "department")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.SourceStrict
                                                                               'GHC.Generics.DecidedStrict)
                                                                            (GHC.Generics.Rec0
                                                                               GHC.Base.String)
                                                                          GHC.Generics.:*: GHC.Generics.S1
                                                                                             ('GHC.Generics.MetaSel
                                                                                                ('GHC.Base.Just
                                                                                                   "semester")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.SourceStrict
                                                                                                'GHC.Generics.DecidedStrict)
                                                                                             (GHC.Generics.Rec0
                                                                                                GHC.Base.String)))))>_N))) -}
d474f3fc3b3f0d97e34d2cc80316e459
  $fPersistableWidthStudent2 :: [GHC.Types.Int] -> [GHC.Types.Int]
  {- Arity: 1, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ @ a2 (eta :: [GHC.Types.Int]) ->
                 GHC.Types.:
                   @ GHC.Types.Int
                   (Database.Record.Persistable.unsafeValueWidth @ GHC.Int.Int32)
                     `cast`
                   (Trans
                        (Database.Record.Persistable.N:ProductConst[0] <Data.Monoid.Sum
                                                                          GHC.Types.Int>_N <GHC.Int.Int32>_N)
                        (Trans
                             (Data.Functor.Const.N:Const[0]
                                  <*>_N <Data.Monoid.Sum GHC.Types.Int>_R <GHC.Int.Int32>_P)
                             (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R)))
                   (GHC.Types.:
                      @ GHC.Types.Int
                      (Database.Record.Persistable.unsafeValueWidth @ GHC.Int.Int32)
                        `cast`
                      (Trans
                           (Database.Record.Persistable.N:ProductConst[0] <Data.Monoid.Sum
                                                                             GHC.Types.Int>_N <GHC.Int.Int32>_N)
                           (Trans
                                (Data.Functor.Const.N:Const[0]
                                     <*>_N <Data.Monoid.Sum GHC.Types.Int>_R <GHC.Int.Int32>_P)
                                (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R)))
                      (GHC.Types.:
                         @ GHC.Types.Int
                         (Database.Record.Persistable.unsafeValueWidth @ GHC.Base.String)
                           `cast`
                         (Trans
                              (Database.Record.Persistable.N:ProductConst[0] <Data.Monoid.Sum
                                                                                GHC.Types.Int>_N <[GHC.Types.Char]>_N)
                              (Trans
                                   (Data.Functor.Const.N:Const[0]
                                        <*>_N
                                        <Data.Monoid.Sum GHC.Types.Int>_R
                                        <[GHC.Types.Char]>_P)
                                   (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R)))
                         (GHC.Types.:
                            @ GHC.Types.Int
                            (Database.Record.Persistable.unsafeValueWidth @ GHC.Base.String)
                              `cast`
                            (Trans
                                 (Database.Record.Persistable.N:ProductConst[0] <Data.Monoid.Sum
                                                                                   GHC.Types.Int>_N <[GHC.Types.Char]>_N)
                                 (Trans
                                      (Data.Functor.Const.N:Const[0]
                                           <*>_N
                                           <Data.Monoid.Sum GHC.Types.Int>_R
                                           <[GHC.Types.Char]>_P)
                                      (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R)))
                            (GHC.Types.:
                               @ GHC.Types.Int
                               (Database.Record.Persistable.unsafeValueWidth @ GHC.Base.String)
                                 `cast`
                               (Trans
                                    (Database.Record.Persistable.N:ProductConst[0] <Data.Monoid.Sum
                                                                                      GHC.Types.Int>_N <[GHC.Types.Char]>_N)
                                    (Trans
                                         (Data.Functor.Const.N:Const[0]
                                              <*>_N
                                              <Data.Monoid.Sum GHC.Types.Int>_R
                                              <[GHC.Types.Char]>_P)
                                         (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R)))
                               (GHC.Types.:
                                  @ GHC.Types.Int
                                  (Database.Record.Persistable.unsafeValueWidth @ GHC.Base.String)
                                    `cast`
                                  (Trans
                                       (Database.Record.Persistable.N:ProductConst[0] <Data.Monoid.Sum
                                                                                         GHC.Types.Int>_N <[GHC.Types.Char]>_N)
                                       (Trans
                                            (Data.Functor.Const.N:Const[0]
                                                 <*>_N
                                                 <Data.Monoid.Sum GHC.Types.Int>_R
                                                 <[GHC.Types.Char]>_P)
                                            (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R)))
                                  eta)))))) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fPersistableWidthStudent_$s$dmpersistableWidth ::
    Database.Record.Persistable.PersistableRecordWidth
      Database.Relations.Student.Student
  {- Unfolding: InlineRule (-3, True, False)
                (Database.Record.Persistable.pmapConst
                   @ (GHC.Arr.Array GHC.Types.Int GHC.Types.Int)
                   @ (Data.Monoid.Sum GHC.Types.Int)
                   @ Database.Relations.Student.Student
                   (\ (a2 :: GHC.Arr.Array GHC.Types.Int GHC.Types.Int)[OneShot] ->
                    case a2 of wild { GHC.Arr.Array l u dt ds ->
                    GHC.Base.$
                      @ 'GHC.Types.PtrRepLifted
                      @ GHC.Types.Int
                      @ GHC.Types.Int
                      (GHC.Arr.unsafeAt @ GHC.Types.Int @ GHC.Types.Int wild)
                      (Database.Record.Persistable.$dmpersistableWidth_$slessSafeIndex
                         (l, u)
                         (GHC.Types.I# dt)
                         (GHC.Base.$
                            @ 'GHC.Types.PtrRepLifted
                            @ (GHC.Types.Int, GHC.Types.Int)
                            @ GHC.Types.Int
                            (Data.Tuple.snd @ GHC.Types.Int @ GHC.Types.Int)
                            (l, u))) })
                     `cast`
                   (<GHC.Arr.Array GHC.Types.Int GHC.Types.Int>_R
                    ->_R Sym (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R))
                   (Database.Record.Persistable.genericFieldOffsets
                      @ Database.Relations.Student.Student
                      Database.Relations.Student.$fGenericStudent
                      Database.Relations.Student.$fPersistableWidthStudent1
                        `cast`
                      (Database.Record.Persistable.GFieldWidthList
                         (Sym (Database.Relations.Student.Rep_Student[0])))_R)) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fProductConstructor(->) ::
    Database.Relational.Query.ProjectableClass.ProductConstructor
      (GHC.Int.Int32
       -> GHC.Int.Int32
       -> GHC.Base.String
       -> GHC.Base.String
       -> GHC.Base.String
       -> GHC.Base.String
       -> Database.Relations.Student.Student)
  DFunId
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,U><S,U><S,U><S,U><S,U><S,U>m,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Database.Relations.Student.$WStudent
                  `cast`
                (Sym (Database.Relational.Query.ProjectableClass.N:ProductConstructor[0]
                          <GHC.Int.Int32
                           -> GHC.Int.Int32
                           -> GHC.Base.String
                           -> GHC.Base.String
                           -> GHC.Base.String
                           -> GHC.Base.String
                           -> Database.Relations.Student.Student>_N)) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fShowConstantTermsSQLStudent ::
    Database.Relational.Query.ProjectableClass.ShowConstantTermsSQL
      Database.Relations.Student.Student
  DFunId
  {- Arity: 1, Strictness: <S(LLSSSS),1*U(U,U,U,U,U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Database.Relations.Student.$fShowConstantTermsSQLStudent_$cshowConstantTermsSQL'
                  `cast`
                (Sym (Database.Relational.Query.ProjectableClass.N:ShowConstantTermsSQL[0]
                          <Database.Relations.Student.Student>_N)) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fShowConstantTermsSQLStudent_$cshowConstantTermsSQL' ::
    Database.Relations.Student.Student
    -> Data.DList.DList
         Database.Relational.Query.Internal.SQL.StringSQL
  {- Arity: 1, Strictness: <S(LLSSSS),1*U(U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Database.Relations.Student.Student) ->
                 case w of ww { Database.Relations.Student.Student ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Database.Relations.Student.$w$cshowConstantTermsSQL'
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6 }) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fShowStudent :: GHC.Show.Show Database.Relations.Student.Student
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Database.Relations.Student.Student
                  Database.Relations.Student.$fShowStudent_$cshowsPrec
                  Database.Relations.Student.$fShowStudent_$cshow
                  Database.Relations.Student.$fShowStudent_$cshowList -}
f8b27d68bc355eaf4dff6876392cc31e
  $fShowStudent1 ::
    Database.Relations.Student.Student -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Database.Relations.Student.Student)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { Database.Relations.Student.Student ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Database.Relations.Student.$w$cshowsPrec
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1 }) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fShowStudent_$cshow ::
    Database.Relations.Student.Student -> GHC.Base.String
  {- Arity: 1, Strictness: <S(LLSSSS),1*U(U,U,U,U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Database.Relations.Student.Student) ->
                 Database.Relations.Student.$fShowStudent_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fShowStudent_$cshowList ::
    [Database.Relations.Student.Student] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Database.Relations.Student.Student
                   Database.Relations.Student.$fShowStudent1) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fShowStudent_$cshowsPrec ::
    GHC.Types.Int
    -> Database.Relations.Student.Student -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S(LLSSSS),1*U(U,U,U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Database.Relations.Student.Student)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Database.Relations.Student.Student ww3 ww4 ww5 ww6 ww7 ww8 ->
                 Database.Relations.Student.$w$cshowsPrec
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   w2 } }) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fTableDerivableStudent ::
    Database.Relational.Query.Table.TableDerivable
      Database.Relations.Student.Student
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Database.Relations.Student.Student
                  Database.Relations.Student.$fPersistableWidthStudent_$s$dmpersistableWidth
                    `cast`
                  (Sym (Database.Record.Persistable.N:PersistableWidth[0]) <Database.Relations.Student.Student>_N)
                  Database.Relations.Student.$fTableDerivableStudent_$cderivedTable -}
f8b27d68bc355eaf4dff6876392cc31e
  $fTableDerivableStudent_$cderivedTable ::
    Database.Relational.Query.Table.Table
      Database.Relations.Student.Student
  {- Unfolding: InlineRule (0, True, True)
                Database.Relations.Student.tableOfStudent -}
f8b27d68bc355eaf4dff6876392cc31e
  $fToSqlSqlValueStudent ::
    Database.Record.ToSql.ToSql
      Database.HDBC.SqlValue.SqlValue Database.Relations.Student.Student
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Database.HDBC.SqlValue.SqlValue
                  @ Database.Relations.Student.Student
                  Database.Relations.Student.$fPersistableWidthStudent_$s$dmpersistableWidth
                    `cast`
                  (Sym (Database.Record.Persistable.N:PersistableWidth[0]) <Database.Relations.Student.Student>_N)
                  Database.Relations.Student.$fToSqlSqlValueStudent_$crecordToSql -}
f8b27d68bc355eaf4dff6876392cc31e
  $fToSqlSqlValueStudent1 ::
    Database.Relations.Student.Student
    -> Database.Record.ToSql.ToSqlM Database.HDBC.SqlValue.SqlValue ()
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSSSS),1*U(U,U,U,U,U,U)>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Database.Relations.Student.Student) ->
                 case w of ww { Database.Relations.Student.Student ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case Database.Relations.Student.$w$crecordToSql
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6 of ww7 { (#,#) ww8 ww9 ->
                 (ww8, ww9)
                   `cast`
                 (Trans
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <((), Data.DList.DList Database.HDBC.SqlValue.SqlValue)>_R))
                      (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                <Data.DList.DList Database.HDBC.SqlValue.SqlValue>_N
                                <Data.Functor.Identity.Identity>_R
                                <()>_N))) } }) -}
f8b27d68bc355eaf4dff6876392cc31e
  $fToSqlSqlValueStudent_$crecordToSql ::
    Database.Record.ToSql.RecordToSql
      Database.HDBC.SqlValue.SqlValue Database.Relations.Student.Student
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSSSS),1*U(U,U,U,U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Database.Relations.Student.$fToSqlSqlValueStudent1
                  `cast`
                (Sym (Database.Record.ToSql.N:RecordToSql[0]
                          <Database.HDBC.SqlValue.SqlValue>_N
                          <Database.Relations.Student.Student>_R)) -}
7c8d1ee301d11aca6f6e20307ac46299
  $tc'Student :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7968710526638740954##
                   1200180403876895146##
                   Database.Relations.Student.$trModule
                   Database.Relations.Student.$tc'Student1) -}
3d6b3285a5a1632595e9e0d7b7f7cf3f
  $tc'Student1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Student"#) -}
9522cb274e0c4827e1aa6f57d8ed28ec
  $tcStudent :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2964269337432472435##
                   6845289244230899776##
                   Database.Relations.Student.$trModule
                   Database.Relations.Student.$tcStudent1) -}
ad4a82f80a87518abc39a28e8a42ae15
  $tcStudent1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Student"#) -}
0d2af01986306d7d9315ff5e5719dd85
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Database.Relations.Student.$trModule2
                   Database.Relations.Student.$trModule1) -}
285f92db513f5f47cac2b26ebc70b792
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Database.Relations.Student"#) -}
33d7bfad617c574b262903c79ae9f3e6
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Research-0.1.0.0-Hn4FdcrWuuOKVDFLG4379u"#) -}
f8b27d68bc355eaf4dff6876392cc31e
  $w$crecordFromSql ::
    [Database.HDBC.SqlValue.SqlValue]
    -> (# Database.Relations.Student.Student,
          [Database.HDBC.SqlValue.SqlValue] #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: [Database.HDBC.SqlValue.SqlValue]) ->
                 let {
                   ds :: ((GHC.Generics.:*:)
                            (GHC.Generics.S1
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "studentId")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.SourceStrict
                                  'GHC.Generics.DecidedUnpack)
                               (GHC.Generics.Rec0 GHC.Int.Int32))
                            (GHC.Generics.S1
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "studentNumber")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.SourceStrict
                                  'GHC.Generics.DecidedUnpack)
                               (GHC.Generics.Rec0 GHC.Int.Int32)
                             GHC.Generics.:*: GHC.Generics.S1
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "name")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.SourceStrict
                                                   'GHC.Generics.DecidedStrict)
                                                (GHC.Generics.Rec0 GHC.Base.String))
                            GHC.Prim.Any,
                          [Database.HDBC.SqlValue.SqlValue])
                   = case Database.Relations.Student.$w$dGFromSql1
                            @ GHC.Prim.Any
                            w of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 let {
                   ds1 :: ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "faculty")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.SourceStrict
                                   'GHC.Generics.DecidedStrict)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "department")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.SourceStrict
                                   'GHC.Generics.DecidedStrict)
                                (GHC.Generics.Rec0 GHC.Base.String)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "semester")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.SourceStrict
                                                    'GHC.Generics.DecidedStrict)
                                                 (GHC.Generics.Rec0 GHC.Base.String))
                             GHC.Prim.Any,
                           [Database.HDBC.SqlValue.SqlValue])
                   = case Database.Relations.Student.$w$dGFromSql
                            @ GHC.Prim.Any
                            (case ds of wild { (,) a2 vals' ->
                             vals' }) of ww { (#,#) ww1 ww2 ->
                     (ww1, ww2) }
                 } in
                 (# case ds of wild { (,) a2 vals' ->
                    case a2 of ww { GHC.Generics.:*: ww1 ww2 ->
                    case ww2 of ww3 { GHC.Generics.:*: ww4 ww5 ->
                    case ds1 of wild1 { (,) a4 vals'1 ->
                    case a4 of ww6 { GHC.Generics.:*: ww7 ww8 ->
                    case ww8 of ww9 { GHC.Generics.:*: ww10 ww11 ->
                    case ww1
                           `cast`
                         (Trans
                              (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "studentId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.SourceStrict
                                      'GHC.Generics.DecidedUnpack>_P
                                   <GHC.Generics.K1
                                      GHC.Generics.R GHC.Int.Int32>_R <GHC.Prim.Any>_N)
                              (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P
                                   <GHC.Int.Int32>_R
                                   <GHC.Prim.Any>_P)) of dt { GHC.Int.I32# dt1 ->
                    case ww4
                           `cast`
                         (Trans
                              (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "studentNumber")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.SourceStrict
                                      'GHC.Generics.DecidedUnpack>_P
                                   <GHC.Generics.K1
                                      GHC.Generics.R GHC.Int.Int32>_R <GHC.Prim.Any>_N)
                              (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P
                                   <GHC.Int.Int32>_R
                                   <GHC.Prim.Any>_P)) of dt2 { GHC.Int.I32# dt3 ->
                    case ww5
                           `cast`
                         (Trans
                              (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "name")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.SourceStrict
                                      'GHC.Generics.DecidedStrict>_P
                                   <GHC.Generics.K1
                                      GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                              (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P
                                   <GHC.Base.String>_R
                                   <GHC.Prim.Any>_P)) of dt4 { DEFAULT ->
                    case ww7
                           `cast`
                         (Trans
                              (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "faculty")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.SourceStrict
                                      'GHC.Generics.DecidedStrict>_P
                                   <GHC.Generics.K1
                                      GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                              (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P
                                   <GHC.Base.String>_R
                                   <GHC.Prim.Any>_P)) of dt5 { DEFAULT ->
                    case ww10
                           `cast`
                         (Trans
                              (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "department")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.SourceStrict
                                      'GHC.Generics.DecidedStrict>_P
                                   <GHC.Generics.K1
                                      GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                              (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P
                                   <GHC.Base.String>_R
                                   <GHC.Prim.Any>_P)) of dt6 { DEFAULT ->
                    case ww11
                           `cast`
                         (Trans
                              (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "semester")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.SourceStrict
                                      'GHC.Generics.DecidedStrict>_P
                                   <GHC.Generics.K1
                                      GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                              (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P
                                   <GHC.Base.String>_R
                                   <GHC.Prim.Any>_P)) of dt7 { DEFAULT ->
                    Database.Relations.Student.Student
                      dt1
                      dt3
                      dt4
                      dt5
                      dt6
                      dt7 } } } } } } } } } } } },
                    case ds1 of wild { (,) a2 vals' -> vals' } #)) -}
9787774215668d7ff79581de5591b932
  $w$crecordToSql ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> (# (), Data.DList.DList Database.HDBC.SqlValue.SqlValue #)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,U><L,U><S,U><S,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: GHC.Base.String)
                   (ww5 :: GHC.Base.String) ->
                 let {
                   k :: Database.HDBC.SqlValue.SqlValue
                   = Database.HDBC.SqlValue.SqlString ww5
                 } in
                 let {
                   ds :: Database.HDBC.SqlValue.SqlValue
                   = Database.HDBC.SqlValue.SqlString ww4
                 } in
                 let {
                   ds1 :: Database.HDBC.SqlValue.SqlValue
                   = Database.HDBC.SqlValue.SqlString ww3
                 } in
                 let {
                   k1 :: Database.HDBC.SqlValue.SqlValue
                   = Database.HDBC.SqlValue.SqlString ww2
                 } in
                 let {
                   a2 :: GHC.Int.Int32 {- Strictness: m -} = GHC.Int.I32# ww1
                 } in
                 let {
                   ds2 :: Database.HDBC.SqlValue.SqlValue
                   = Database.HDBC.SqlValue.SqlInt32 a2
                 } in
                 let {
                   a4 :: GHC.Int.Int32 {- Strictness: m -} = GHC.Int.I32# ww
                 } in
                 let {
                   ds3 :: Database.HDBC.SqlValue.SqlValue
                   = Database.HDBC.SqlValue.SqlInt32 a4
                 } in
                 (# GHC.Tuple.(),
                    (\ (eta1 :: [Database.HDBC.SqlValue.SqlValue]) ->
                     GHC.Types.:
                       @ Database.HDBC.SqlValue.SqlValue
                       ds3
                       (GHC.Types.:
                          @ Database.HDBC.SqlValue.SqlValue
                          ds2
                          (GHC.Types.:
                             @ Database.HDBC.SqlValue.SqlValue
                             k1
                             (GHC.Types.:
                                @ Database.HDBC.SqlValue.SqlValue
                                ds1
                                (GHC.Types.:
                                   @ Database.HDBC.SqlValue.SqlValue
                                   ds
                                   (GHC.Types.: @ Database.HDBC.SqlValue.SqlValue k eta1))))))
                      `cast`
                    (Sym (Data.DList.N:DList[0]
                              <Database.HDBC.SqlValue.SqlValue>_R)) #)) -}
ce429207acc393ae902181b7c55db985
  $w$cshowConstantTermsSQL' ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> Data.DList.DList
         Database.Relational.Query.Internal.SQL.StringSQL
  {- Arity: 6, Strictness: <L,U><L,U><S,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: GHC.Base.String)
                   (ww5 :: GHC.Base.String) ->
                 let {
                   xs :: [GHC.Types.Char]
                   = case GHC.Show.$wshowSignedInt
                            0#
                            ww
                            (GHC.Types.[] @ GHC.Types.Char) of ww6 { (#,#) ww7 ww8 ->
                     GHC.Types.: @ GHC.Types.Char ww7 ww8 }
                 } in
                 let {
                   xs1 :: [GHC.Types.Char] -> [GHC.Types.Char] {- Arity: 1 -}
                   = GHC.Base.++ @ GHC.Types.Char xs
                 } in
                 let {
                   xs2 :: Language.SQL.Keyword.Internal.Type.Keyword
                   = Language.SQL.Keyword.Internal.Type.Sequence
                       xs1 `cast` (Sym (Language.SQL.Keyword.Internal.Type.N:DString[0]))
                 } in
                 let {
                   ys :: Data.DList.DList Language.SQL.Keyword.Internal.Type.Keyword
                   = Database.Relations.Student.$w$dGShowConstantTermsSQL1
                       @ GHC.Prim.Any
                       (GHC.Int.I32# ww1)
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Int.Int32>_R <GHC.Prim.Any>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "studentNumber")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.SourceStrict
                                         'GHC.Generics.DecidedUnpack>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Int.Int32>_R) <GHC.Prim.Any>_N))
                       ww2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "name")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.SourceStrict
                                         'GHC.Generics.DecidedStrict>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Base.String>_R) <GHC.Prim.Any>_N))
                 } in
                 let {
                   xs3 :: [GHC.Types.Char]
                   = GHC.Base.++
                       @ GHC.Types.Char
                       (Database.Relational.Query.Pure.$fShowConstantTermsSQLByteString_rec
                          ww3)
                       Database.Relational.Query.Pure.$fShowConstantTermsSQLByteString2
                 } in
                 let {
                   xs4 :: [GHC.Types.Char]
                   = GHC.Types.:
                       @ GHC.Types.Char
                       Database.Relational.Query.Pure.$fShowConstantTermsSQLByteString3
                       xs3
                 } in
                 let {
                   xs5 :: [GHC.Types.Char] -> [GHC.Types.Char] {- Arity: 1 -}
                   = GHC.Base.++ @ GHC.Types.Char xs4
                 } in
                 let {
                   xs6 :: Language.SQL.Keyword.Internal.Type.Keyword
                   = Language.SQL.Keyword.Internal.Type.Sequence
                       xs5 `cast` (Sym (Language.SQL.Keyword.Internal.Type.N:DString[0]))
                 } in
                 let {
                   ys1 :: Data.DList.DList Language.SQL.Keyword.Internal.Type.Keyword
                   = Database.Relations.Student.$w$dGShowConstantTermsSQL
                       @ GHC.Prim.Any
                       ww4
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "department")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.SourceStrict
                                         'GHC.Generics.DecidedStrict>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Base.String>_R) <GHC.Prim.Any>_N))
                       ww5
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "semester")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.SourceStrict
                                         'GHC.Generics.DecidedStrict>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Base.String>_R) <GHC.Prim.Any>_N))
                 } in
                 (\ (eta :: [Language.SQL.Keyword.Internal.Type.Keyword]) ->
                  GHC.Types.:
                    @ Database.Relational.Query.Internal.SQL.StringSQL
                    xs2
                    (ys
                       `cast`
                     (Data.DList.N:DList[0]
                          <Language.SQL.Keyword.Internal.Type.Keyword>_R)
                       (GHC.Types.:
                          @ Database.Relational.Query.Internal.SQL.StringSQL
                          xs6
                          (ys1
                             `cast`
                           (Data.DList.N:DList[0]
                                <Language.SQL.Keyword.Internal.Type.Keyword>_R)
                             eta))))
                   `cast`
                 (Sym (Data.DList.N:DList[0]
                           <Language.SQL.Keyword.Internal.Type.Keyword>_R))) -}
b5d472d039f8265090d05370290c18bd
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 8, Strictness: <S,U><L,U><L,U><S,U><S,U><S,U><S,U><L,U>,
     Inline: [0] -}
d928c443191d33734e2c5fa3ddcaed43
  $w$dGFromSql ::
    [Database.HDBC.SqlValue.SqlValue]
    -> (# (GHC.Generics.:*:)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "faculty")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.SourceStrict
                  'GHC.Generics.DecidedStrict)
               (GHC.Generics.Rec0 GHC.Base.String))
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "department")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.SourceStrict
                  'GHC.Generics.DecidedStrict)
               (GHC.Generics.Rec0 GHC.Base.String)
             GHC.Generics.:*: GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "semester")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.SourceStrict
                                   'GHC.Generics.DecidedStrict)
                                (GHC.Generics.Rec0 GHC.Base.String))
            a1,
          [Database.HDBC.SqlValue.SqlValue] #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ @ a2 (w :: [Database.HDBC.SqlValue.SqlValue]) ->
                 let {
                   ds :: [Database.HDBC.SqlValue.SqlValue]
                   = case w of wild {
                       [] -> GHC.List.scanl2 @ Database.HDBC.SqlValue.SqlValue
                       : ds1 xs -> xs }
                 } in
                 let {
                   ds1 :: [Database.HDBC.SqlValue.SqlValue]
                   = case ds of wild {
                       [] -> GHC.List.scanl2 @ Database.HDBC.SqlValue.SqlValue
                       : ds2 xs -> xs }
                 } in
                 (# GHC.Generics.:*:
                      @ (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "faculty")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.SourceStrict
                              'GHC.Generics.DecidedStrict)
                           (GHC.Generics.Rec0 GHC.Base.String))
                      @ (GHC.Generics.S1
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "department")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.SourceStrict
                              'GHC.Generics.DecidedStrict)
                           (GHC.Generics.Rec0 GHC.Base.String)
                         GHC.Generics.:*: GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "semester")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.SourceStrict
                                               'GHC.Generics.DecidedStrict)
                                            (GHC.Generics.Rec0 GHC.Base.String))
                      @ a2
                      (case Database.HDBC.SqlValue.$fConvertibleSqlValueByteString_$csafeConvert1
                              (GHC.List.head @ Database.HDBC.SqlValue.SqlValue w) of wild {
                         Data.Either.Left e
                         -> (Data.Convertible.Base.convert1 @ GHC.Base.String e)
                              `cast`
                            (Trans
                                 (Sym (GHC.Generics.N:K1[0]
                                           <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a2>_P))
                                 (Sym (GHC.Generics.N:M1[0]
                                           <GHC.Generics.S>_P
                                           <'GHC.Generics.MetaSel
                                              ('GHC.Base.Just "faculty")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.SourceStrict
                                              'GHC.Generics.DecidedStrict>_P
                                           <GHC.Generics.K1
                                              GHC.Generics.R GHC.Base.String>_R) <a2>_N))
                         Data.Either.Right r
                         -> r `cast`
                            (Trans
                                 (Sym (GHC.Generics.N:K1[0]
                                           <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a2>_P))
                                 (Sym (GHC.Generics.N:M1[0]
                                           <GHC.Generics.S>_P
                                           <'GHC.Generics.MetaSel
                                              ('GHC.Base.Just "faculty")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.SourceStrict
                                              'GHC.Generics.DecidedStrict>_P
                                           <GHC.Generics.K1
                                              GHC.Generics.R GHC.Base.String>_R) <a2>_N)) })
                      (GHC.Generics.:*:
                         @ (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "department")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.SourceStrict
                                 'GHC.Generics.DecidedStrict)
                              (GHC.Generics.Rec0 GHC.Base.String))
                         @ (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "semester")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.SourceStrict
                                 'GHC.Generics.DecidedStrict)
                              (GHC.Generics.Rec0 GHC.Base.String))
                         @ a2
                         (case Database.HDBC.SqlValue.$fConvertibleSqlValueByteString_$csafeConvert1
                                 (GHC.List.head @ Database.HDBC.SqlValue.SqlValue ds) of wild {
                            Data.Either.Left e
                            -> (Data.Convertible.Base.convert1 @ GHC.Base.String e)
                                 `cast`
                               (Trans
                                    (Sym (GHC.Generics.N:K1[0]
                                              <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a2>_P))
                                    (Sym (GHC.Generics.N:M1[0]
                                              <GHC.Generics.S>_P
                                              <'GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "department")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.SourceStrict
                                                 'GHC.Generics.DecidedStrict>_P
                                              <GHC.Generics.K1
                                                 GHC.Generics.R GHC.Base.String>_R) <a2>_N))
                            Data.Either.Right r
                            -> r `cast`
                               (Trans
                                    (Sym (GHC.Generics.N:K1[0]
                                              <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a2>_P))
                                    (Sym (GHC.Generics.N:M1[0]
                                              <GHC.Generics.S>_P
                                              <'GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "department")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.SourceStrict
                                                 'GHC.Generics.DecidedStrict>_P
                                              <GHC.Generics.K1
                                                 GHC.Generics.R GHC.Base.String>_R) <a2>_N)) })
                         (case Database.HDBC.SqlValue.$fConvertibleSqlValueByteString_$csafeConvert1
                                 (GHC.List.head @ Database.HDBC.SqlValue.SqlValue ds1) of wild {
                            Data.Either.Left e
                            -> (Data.Convertible.Base.convert1 @ GHC.Base.String e)
                                 `cast`
                               (Trans
                                    (Sym (GHC.Generics.N:K1[0]
                                              <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a2>_P))
                                    (Sym (GHC.Generics.N:M1[0]
                                              <GHC.Generics.S>_P
                                              <'GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "semester")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.SourceStrict
                                                 'GHC.Generics.DecidedStrict>_P
                                              <GHC.Generics.K1
                                                 GHC.Generics.R GHC.Base.String>_R) <a2>_N))
                            Data.Either.Right r
                            -> r `cast`
                               (Trans
                                    (Sym (GHC.Generics.N:K1[0]
                                              <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a2>_P))
                                    (Sym (GHC.Generics.N:M1[0]
                                              <GHC.Generics.S>_P
                                              <'GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "semester")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.SourceStrict
                                                 'GHC.Generics.DecidedStrict>_P
                                              <GHC.Generics.K1
                                                 GHC.Generics.R GHC.Base.String>_R) <a2>_N)) })),
                    GHC.List.tail @ Database.HDBC.SqlValue.SqlValue ds1 #)) -}
7dd650847ccea78a1c4bc555706bb62e
  $w$dGFromSql1 ::
    [Database.HDBC.SqlValue.SqlValue]
    -> (# (GHC.Generics.:*:)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "studentId")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.SourceStrict
                  'GHC.Generics.DecidedUnpack)
               (GHC.Generics.Rec0 GHC.Int.Int32))
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Base.Just "studentNumber")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.SourceStrict
                  'GHC.Generics.DecidedUnpack)
               (GHC.Generics.Rec0 GHC.Int.Int32)
             GHC.Generics.:*: GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "name")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.SourceStrict
                                   'GHC.Generics.DecidedStrict)
                                (GHC.Generics.Rec0 GHC.Base.String))
            a1,
          [Database.HDBC.SqlValue.SqlValue] #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ @ a2 (w :: [Database.HDBC.SqlValue.SqlValue]) ->
                 let {
                   ds :: [Database.HDBC.SqlValue.SqlValue]
                   = case w of wild {
                       [] -> GHC.List.scanl2 @ Database.HDBC.SqlValue.SqlValue
                       : ds1 xs -> xs }
                 } in
                 let {
                   ds1 :: [Database.HDBC.SqlValue.SqlValue]
                   = case ds of wild {
                       [] -> GHC.List.scanl2 @ Database.HDBC.SqlValue.SqlValue
                       : ds2 xs -> xs }
                 } in
                 (# GHC.Generics.:*:
                      @ (GHC.Generics.M1
                           GHC.Generics.S
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "studentId")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.SourceStrict
                              'GHC.Generics.DecidedUnpack)
                           (GHC.Generics.Rec0 GHC.Int.Int32))
                      @ (GHC.Generics.S1
                           ('GHC.Generics.MetaSel
                              ('GHC.Base.Just "studentNumber")
                              'GHC.Generics.NoSourceUnpackedness
                              'GHC.Generics.SourceStrict
                              'GHC.Generics.DecidedUnpack)
                           (GHC.Generics.Rec0 GHC.Int.Int32)
                         GHC.Generics.:*: GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "name")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.SourceStrict
                                               'GHC.Generics.DecidedStrict)
                                            (GHC.Generics.Rec0 GHC.Base.String))
                      @ a2
                      (case Database.HDBC.SqlValue.$fConvertibleSqlValueInt32_$csafeConvert
                              (GHC.List.head @ Database.HDBC.SqlValue.SqlValue w) of wild {
                         Data.Either.Left e
                         -> (Data.Convertible.Base.convert1 @ GHC.Int.Int32 e)
                              `cast`
                            (Trans
                                 (Sym (GHC.Generics.N:K1[0]
                                           <GHC.Generics.R>_P <GHC.Int.Int32>_R <a2>_P))
                                 (Sym (GHC.Generics.N:M1[0]
                                           <GHC.Generics.S>_P
                                           <'GHC.Generics.MetaSel
                                              ('GHC.Base.Just "studentId")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.SourceStrict
                                              'GHC.Generics.DecidedUnpack>_P
                                           <GHC.Generics.K1
                                              GHC.Generics.R GHC.Int.Int32>_R) <a2>_N))
                         Data.Either.Right r
                         -> r `cast`
                            (Trans
                                 (Sym (GHC.Generics.N:K1[0]
                                           <GHC.Generics.R>_P <GHC.Int.Int32>_R <a2>_P))
                                 (Sym (GHC.Generics.N:M1[0]
                                           <GHC.Generics.S>_P
                                           <'GHC.Generics.MetaSel
                                              ('GHC.Base.Just "studentId")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.SourceStrict
                                              'GHC.Generics.DecidedUnpack>_P
                                           <GHC.Generics.K1
                                              GHC.Generics.R GHC.Int.Int32>_R) <a2>_N)) })
                      (GHC.Generics.:*:
                         @ (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "studentNumber")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.SourceStrict
                                 'GHC.Generics.DecidedUnpack)
                              (GHC.Generics.Rec0 GHC.Int.Int32))
                         @ (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "name")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.SourceStrict
                                 'GHC.Generics.DecidedStrict)
                              (GHC.Generics.Rec0 GHC.Base.String))
                         @ a2
                         (case Database.HDBC.SqlValue.$fConvertibleSqlValueInt32_$csafeConvert
                                 (GHC.List.head @ Database.HDBC.SqlValue.SqlValue ds) of wild {
                            Data.Either.Left e
                            -> (Data.Convertible.Base.convert1 @ GHC.Int.Int32 e)
                                 `cast`
                               (Trans
                                    (Sym (GHC.Generics.N:K1[0]
                                              <GHC.Generics.R>_P <GHC.Int.Int32>_R <a2>_P))
                                    (Sym (GHC.Generics.N:M1[0]
                                              <GHC.Generics.S>_P
                                              <'GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "studentNumber")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.SourceStrict
                                                 'GHC.Generics.DecidedUnpack>_P
                                              <GHC.Generics.K1
                                                 GHC.Generics.R GHC.Int.Int32>_R) <a2>_N))
                            Data.Either.Right r
                            -> r `cast`
                               (Trans
                                    (Sym (GHC.Generics.N:K1[0]
                                              <GHC.Generics.R>_P <GHC.Int.Int32>_R <a2>_P))
                                    (Sym (GHC.Generics.N:M1[0]
                                              <GHC.Generics.S>_P
                                              <'GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "studentNumber")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.SourceStrict
                                                 'GHC.Generics.DecidedUnpack>_P
                                              <GHC.Generics.K1
                                                 GHC.Generics.R GHC.Int.Int32>_R) <a2>_N)) })
                         (case Database.HDBC.SqlValue.$fConvertibleSqlValueByteString_$csafeConvert1
                                 (GHC.List.head @ Database.HDBC.SqlValue.SqlValue ds1) of wild {
                            Data.Either.Left e
                            -> (Data.Convertible.Base.convert1 @ GHC.Base.String e)
                                 `cast`
                               (Trans
                                    (Sym (GHC.Generics.N:K1[0]
                                              <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a2>_P))
                                    (Sym (GHC.Generics.N:M1[0]
                                              <GHC.Generics.S>_P
                                              <'GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "name")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.SourceStrict
                                                 'GHC.Generics.DecidedStrict>_P
                                              <GHC.Generics.K1
                                                 GHC.Generics.R GHC.Base.String>_R) <a2>_N))
                            Data.Either.Right r
                            -> r `cast`
                               (Trans
                                    (Sym (GHC.Generics.N:K1[0]
                                              <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a2>_P))
                                    (Sym (GHC.Generics.N:M1[0]
                                              <GHC.Generics.S>_P
                                              <'GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "name")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.SourceStrict
                                                 'GHC.Generics.DecidedStrict>_P
                                              <GHC.Generics.K1
                                                 GHC.Generics.R GHC.Base.String>_R) <a2>_N)) })),
                    GHC.List.tail @ Database.HDBC.SqlValue.SqlValue ds1 #)) -}
f96be5481a06fb90e2609e8f086a53b7
  $w$dGShowConstantTermsSQL ::
    GHC.Generics.M1
      GHC.Generics.S
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "department")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.SourceStrict
         'GHC.Generics.DecidedStrict)
      (GHC.Generics.Rec0 GHC.Base.String)
      a1
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "semester")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.SourceStrict
            'GHC.Generics.DecidedStrict)
         (GHC.Generics.Rec0 GHC.Base.String)
         a1
    -> Data.DList.DList
         Database.Relational.Query.Internal.SQL.StringSQL
  {- Arity: 2, Strictness: <L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ @ a2
                   (ww :: GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "department")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.SourceStrict
                               'GHC.Generics.DecidedStrict)
                            (GHC.Generics.Rec0 GHC.Base.String)
                            a2)
                   (ww1 :: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "semester")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.SourceStrict
                                'GHC.Generics.DecidedStrict)
                             (GHC.Generics.Rec0 GHC.Base.String)
                             a2) ->
                 let {
                   xs :: [GHC.Types.Char]
                   = GHC.Base.++
                       @ GHC.Types.Char
                       (Database.Relational.Query.Pure.$fShowConstantTermsSQLByteString_rec
                          ww
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "department")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.SourceStrict
                                       'GHC.Generics.DecidedStrict>_P
                                    <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <a2>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a2>_P)))
                       Database.Relational.Query.Pure.$fShowConstantTermsSQLByteString2
                 } in
                 let {
                   xs1 :: [GHC.Types.Char]
                   = GHC.Types.:
                       @ GHC.Types.Char
                       Database.Relational.Query.Pure.$fShowConstantTermsSQLByteString3
                       xs
                 } in
                 let {
                   xs2 :: [GHC.Types.Char] -> [GHC.Types.Char] {- Arity: 1 -}
                   = GHC.Base.++ @ GHC.Types.Char xs1
                 } in
                 let {
                   xs3 :: Language.SQL.Keyword.Internal.Type.Keyword
                   = Language.SQL.Keyword.Internal.Type.Sequence
                       xs2 `cast` (Sym (Language.SQL.Keyword.Internal.Type.N:DString[0]))
                 } in
                 let {
                   ys :: [GHC.Types.Char]
                   = GHC.Base.++
                       @ GHC.Types.Char
                       (Database.Relational.Query.Pure.$fShowConstantTermsSQLByteString_rec
                          ww1
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "semester")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.SourceStrict
                                       'GHC.Generics.DecidedStrict>_P
                                    <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <a2>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a2>_P)))
                       Database.Relational.Query.Pure.$fShowConstantTermsSQLByteString2
                 } in
                 let {
                   ys1 :: [GHC.Types.Char]
                   = GHC.Types.:
                       @ GHC.Types.Char
                       Database.Relational.Query.Pure.$fShowConstantTermsSQLByteString3
                       ys
                 } in
                 let {
                   ys2 :: [GHC.Types.Char] -> [GHC.Types.Char] {- Arity: 1 -}
                   = GHC.Base.++ @ GHC.Types.Char ys1
                 } in
                 let {
                   ys3 :: Language.SQL.Keyword.Internal.Type.Keyword
                   = Language.SQL.Keyword.Internal.Type.Sequence
                       ys2 `cast` (Sym (Language.SQL.Keyword.Internal.Type.N:DString[0]))
                 } in
                 (\ (eta :: [Language.SQL.Keyword.Internal.Type.Keyword]) ->
                  GHC.Types.:
                    @ Database.Relational.Query.Internal.SQL.StringSQL
                    xs3
                    (GHC.Types.:
                       @ Database.Relational.Query.Internal.SQL.StringSQL
                       ys3
                       eta))
                   `cast`
                 (Sym (Data.DList.N:DList[0]
                           <Language.SQL.Keyword.Internal.Type.Keyword>_R))) -}
1debb8ae9d94ef8e51af114bc822209a
  $w$dGShowConstantTermsSQL1 ::
    GHC.Generics.M1
      GHC.Generics.S
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "studentNumber")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.SourceStrict
         'GHC.Generics.DecidedUnpack)
      (GHC.Generics.Rec0 GHC.Int.Int32)
      a1
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "name")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.SourceStrict
            'GHC.Generics.DecidedStrict)
         (GHC.Generics.Rec0 GHC.Base.String)
         a1
    -> Data.DList.DList
         Database.Relational.Query.Internal.SQL.StringSQL
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U>, Inline: [0],
     Unfolding: (\ @ a2
                   (ww :: GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "studentNumber")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.SourceStrict
                               'GHC.Generics.DecidedUnpack)
                            (GHC.Generics.Rec0 GHC.Int.Int32)
                            a2)
                   (ww1 :: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "name")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.SourceStrict
                                'GHC.Generics.DecidedStrict)
                             (GHC.Generics.Rec0 GHC.Base.String)
                             a2) ->
                 let {
                   xs :: GHC.Base.String
                   = case ww
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "studentNumber")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.SourceStrict
                                       'GHC.Generics.DecidedUnpack>_P
                                    <GHC.Generics.K1 GHC.Generics.R GHC.Int.Int32>_R <a2>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P
                                    <GHC.Int.Int32>_R
                                    <a2>_P)) of wild { GHC.Int.I32# x# ->
                     case GHC.Show.$wshowSignedInt
                            0#
                            x#
                            (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                     GHC.Types.: @ GHC.Types.Char ww5 ww6 } }
                 } in
                 let {
                   xs1 :: [GHC.Types.Char] -> [GHC.Types.Char] {- Arity: 1 -}
                   = GHC.Base.++ @ GHC.Types.Char xs
                 } in
                 let {
                   xs2 :: Language.SQL.Keyword.Internal.Type.Keyword
                   = Language.SQL.Keyword.Internal.Type.Sequence
                       xs1 `cast` (Sym (Language.SQL.Keyword.Internal.Type.N:DString[0]))
                 } in
                 let {
                   ys :: [GHC.Types.Char]
                   = GHC.Base.++
                       @ GHC.Types.Char
                       (Database.Relational.Query.Pure.$fShowConstantTermsSQLByteString_rec
                          ww1
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "name")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.SourceStrict
                                       'GHC.Generics.DecidedStrict>_P
                                    <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <a2>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a2>_P)))
                       Database.Relational.Query.Pure.$fShowConstantTermsSQLByteString2
                 } in
                 let {
                   ys1 :: [GHC.Types.Char]
                   = GHC.Types.:
                       @ GHC.Types.Char
                       Database.Relational.Query.Pure.$fShowConstantTermsSQLByteString3
                       ys
                 } in
                 let {
                   ys2 :: [GHC.Types.Char] -> [GHC.Types.Char] {- Arity: 1 -}
                   = GHC.Base.++ @ GHC.Types.Char ys1
                 } in
                 let {
                   ys3 :: Language.SQL.Keyword.Internal.Type.Keyword
                   = Language.SQL.Keyword.Internal.Type.Sequence
                       ys2 `cast` (Sym (Language.SQL.Keyword.Internal.Type.N:DString[0]))
                 } in
                 (\ (eta :: [Language.SQL.Keyword.Internal.Type.Keyword]) ->
                  GHC.Types.:
                    @ Database.Relational.Query.Internal.SQL.StringSQL
                    xs2
                    (GHC.Types.:
                       @ Database.Relational.Query.Internal.SQL.StringSQL
                       ys3
                       eta))
                   `cast`
                 (Sym (Data.DList.N:DList[0]
                           <Language.SQL.Keyword.Internal.Type.Keyword>_R))) -}
f8b27d68bc355eaf4dff6876392cc31e
  axiom Rep_Student::
      GHC.Generics.Rep Database.Relations.Student.Student
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Student"
               "Database.Relations.Student"
               "Research-0.1.0.0-Hn4FdcrWuuOKVDFLG4379u"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Student" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "studentId")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.SourceStrict
                      'GHC.Generics.DecidedUnpack)
                   (GHC.Generics.Rec0 GHC.Int.Int32)
                 GHC.Generics.:*: (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "studentNumber")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.SourceStrict
                                        'GHC.Generics.DecidedUnpack)
                                     (GHC.Generics.Rec0 GHC.Int.Int32)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "name")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.SourceStrict
                                                         'GHC.Generics.DecidedStrict)
                                                      (GHC.Generics.Rec0 GHC.Base.String)))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "faculty")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.SourceStrict
                                       'GHC.Generics.DecidedStrict)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "department")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.SourceStrict
                                                         'GHC.Generics.DecidedStrict)
                                                      (GHC.Generics.Rec0 GHC.Base.String)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "semester")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.SourceStrict
                                                                          'GHC.Generics.DecidedStrict)
                                                                       (GHC.Generics.Rec0
                                                                          GHC.Base.String)))))
f8b27d68bc355eaf4dff6876392cc31e
  data Student
    = Student {studentId :: {-# UNPACK #-}GHC.Int.Int32,
               studentNumber :: {-# UNPACK #-}GHC.Int.Int32,
               name :: !GHC.Base.String,
               faculty :: !GHC.Base.String,
               department :: !GHC.Base.String,
               semester :: !GHC.Base.String}
6b6dd6fac8f57d7147aeb7c8bd24e964
  columnOffsetsStudent :: GHC.Arr.Array GHC.Types.Int GHC.Types.Int
  {- Unfolding: (Database.Record.Persistable.offsets
                   Database.Relations.Student.columnOffsetsStudent1) -}
fd423025817ab0cb23c9362a9a4edfb0
  columnOffsetsStudent1 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   (Database.Record.Persistable.unsafeValueWidth @ GHC.Int.Int32)
                     `cast`
                   (Trans
                        (Database.Record.Persistable.N:ProductConst[0] <Data.Monoid.Sum
                                                                          GHC.Types.Int>_N <GHC.Int.Int32>_N)
                        (Trans
                             (Data.Functor.Const.N:Const[0]
                                  <*>_N <Data.Monoid.Sum GHC.Types.Int>_R <GHC.Int.Int32>_P)
                             (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R)))
                   Database.Relations.Student.columnOffsetsStudent2) -}
14b2c263901a1e4b3afd559265f57061
  columnOffsetsStudent2 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   (Database.Record.Persistable.unsafeValueWidth @ GHC.Int.Int32)
                     `cast`
                   (Trans
                        (Database.Record.Persistable.N:ProductConst[0] <Data.Monoid.Sum
                                                                          GHC.Types.Int>_N <GHC.Int.Int32>_N)
                        (Trans
                             (Data.Functor.Const.N:Const[0]
                                  <*>_N <Data.Monoid.Sum GHC.Types.Int>_R <GHC.Int.Int32>_P)
                             (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R)))
                   Database.Relations.Student.columnOffsetsStudent3) -}
969610e39d86f67ea24777a4f0151d29
  columnOffsetsStudent3 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   (Database.Record.Persistable.unsafeValueWidth @ GHC.Base.String)
                     `cast`
                   (Trans
                        (Database.Record.Persistable.N:ProductConst[0] <Data.Monoid.Sum
                                                                          GHC.Types.Int>_N <[GHC.Types.Char]>_N)
                        (Trans
                             (Data.Functor.Const.N:Const[0]
                                  <*>_N <Data.Monoid.Sum GHC.Types.Int>_R <[GHC.Types.Char]>_P)
                             (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R)))
                   Database.Relations.Student.columnOffsetsStudent4) -}
e6b0c0b33c184316e4bce82d8f8bc70d
  columnOffsetsStudent4 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   (Database.Record.Persistable.unsafeValueWidth @ GHC.Base.String)
                     `cast`
                   (Trans
                        (Database.Record.Persistable.N:ProductConst[0] <Data.Monoid.Sum
                                                                          GHC.Types.Int>_N <[GHC.Types.Char]>_N)
                        (Trans
                             (Data.Functor.Const.N:Const[0]
                                  <*>_N <Data.Monoid.Sum GHC.Types.Int>_R <[GHC.Types.Char]>_P)
                             (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R)))
                   Database.Relations.Student.columnOffsetsStudent5) -}
c995d554ff605a0500a0bdab7c497386
  columnOffsetsStudent5 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   (Database.Record.Persistable.unsafeValueWidth @ GHC.Base.String)
                     `cast`
                   (Trans
                        (Database.Record.Persistable.N:ProductConst[0] <Data.Monoid.Sum
                                                                          GHC.Types.Int>_N <[GHC.Types.Char]>_N)
                        (Trans
                             (Data.Functor.Const.N:Const[0]
                                  <*>_N <Data.Monoid.Sum GHC.Types.Int>_R <[GHC.Types.Char]>_P)
                             (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R)))
                   Database.Relations.Student.columnOffsetsStudent6) -}
670d3f47b707b3057c6dd703908d8ac5
  columnOffsetsStudent6 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   (Database.Record.Persistable.unsafeValueWidth @ GHC.Base.String)
                     `cast`
                   (Trans
                        (Database.Record.Persistable.N:ProductConst[0] <Data.Monoid.Sum
                                                                          GHC.Types.Int>_N <[GHC.Types.Char]>_N)
                        (Trans
                             (Data.Functor.Const.N:Const[0]
                                  <*>_N <Data.Monoid.Sum GHC.Types.Int>_R <[GHC.Types.Char]>_P)
                             (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R)))
                   (GHC.Types.[] @ GHC.Types.Int)) -}
48ec2b242d7886bbdedd8770019e8914
  department :: Database.Relations.Student.Student -> GHC.Base.String
  RecSel Left Database.Relations.Student.Student
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Database.Relations.Student.Student) ->
                 case ds of wild { Database.Relations.Student.Student dt dt1 ds1 ds2 ds3 ds4 ->
                 ds3 }) -}
8bdb7d848672b23e13ffdf1ff683df96
  department' ::
    Database.Relational.Query.Pi.Unsafe.Pi
      Database.Relations.Student.Student GHC.Base.String
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                Database.Relations.Student.department'1
                  `cast`
                (Sym (Database.Relational.Query.Pi.Unsafe.N:Pi[0]
                          <Database.Relations.Student.Student>_P <GHC.Base.String>_P)) -}
80e020a6240bec02b61292999164b902
  department'1 ::
    Database.Record.Persistable.PersistableRecordWidth
      Database.Relations.Student.Student
    -> (Database.Relational.Query.Pi.Unsafe.Pi'
          Database.Relations.Student.Student GHC.Base.String,
        Database.Record.Persistable.ProductConst
          (Data.Monoid.Sum GHC.Types.Int) GHC.Base.String)
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, False)
                (\ (eta1 :: Database.Record.Persistable.PersistableRecordWidth
                              Database.Relations.Student.Student) ->
                 (Database.Relational.Query.Pi.Unsafe.Leftest
                    @ Database.Relations.Student.Student
                    @ GHC.Base.String
                    Database.Relations.Student.department'2,
                  Database.Record.Persistable.unsafeValueWidth @ GHC.Base.String)) -}
14d25163fd3ac713c0f330ed30afc17e
  department'10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "libraries/array/Data/Array/Base.hs"#) -}
eac61ddec3e4bc5d1ca655030386abcf
  department'11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Data.Array.Base"#) -}
f3e1d491f690c2886ca23ab806af8242
  department'12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "array-0.5.1.1"#) -}
138ed2543e28466d1bba3f6ce7e9b7c5
  department'13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "error"#) -}
fd4f49c2637a98aadab004a4d0c70501
  department'14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Int"#) -}
015ec3e2f5725abd8550f81c713ece01
  department'15 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4#) -}
a79cf0281afac44c9bc230369639c3f1
  department'2 :: GHC.Types.Int
  {- Unfolding: (case Database.Relations.Student.columnOffsetsStudent of wild { GHC.Arr.Array l u dt ds1 ->
                 case l of wild1 { GHC.Types.I# m ->
                 case u of wild2 { GHC.Types.I# n ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# m 4#) of wild4 {
                   GHC.Types.False
                   -> GHC.Arr.indexError
                        @ GHC.Types.Int
                        @ GHC.Types.Int
                        GHC.Show.$fShowInt
                        (wild1, wild2)
                        Database.Relations.Student.department'15
                        Database.Relations.Student.department'14
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# 4# n) of wild5 {
                        GHC.Types.False
                        -> GHC.Arr.indexError
                             @ GHC.Types.Int
                             @ GHC.Types.Int
                             GHC.Show.$fShowInt
                             (wild1, wild2)
                             Database.Relations.Student.department'15
                             Database.Relations.Student.department'14
                        GHC.Types.True
                        -> let {
                             w :: GHC.Prim.Int# = GHC.Prim.-# 4# m
                           } in
                           let {
                             $j :: GHC.Prim.Void# -> GHC.Types.Int
                               {- Arity: 1, Strictness: <B,A>x -}
                             = \ (w1 :: GHC.Prim.Void#)[OneShot] ->
                               GHC.Err.error
                                 @ 'GHC.Types.PtrRepLifted
                                 @ GHC.Types.Int
                                 Database.Relations.Student.department'4
                                   `cast`
                                 (Sym (GHC.Classes.N:IP[0]
                                           <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                 (GHC.CString.unpackAppendCString#
                                    "Error in array index; "#
                                    (case GHC.Show.$wshowSignedInt
                                            0#
                                            w
                                            (GHC.Types.[]
                                               @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                                     GHC.Base.++
                                       @ GHC.Types.Char
                                       (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                                       (GHC.CString.unpackAppendCString#
                                          " not in range [0.."#
                                          (case GHC.Show.$wshowSignedInt
                                                  0#
                                                  dt
                                                  (GHC.Types.[]
                                                     @ GHC.Types.Char) of ww1 { (#,#) ww2 ww3 ->
                                           GHC.Base.++
                                             @ GHC.Types.Char
                                             (GHC.Types.: @ GHC.Types.Char ww2 ww3)
                                             Database.Relations.Student.department'3 })) }))
                           } in
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=# 0# w) of wild6 {
                             GHC.Types.False -> $j GHC.Prim.void#
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<# w dt) of wild7 {
                                  GHC.Types.False -> $j GHC.Prim.void#
                                  GHC.Types.True
                                  -> case GHC.Prim.indexArray#
                                            @ GHC.Types.Int
                                            ds1
                                            w of ds4 { Unit# ipv ->
                                     ipv } } } } } } } }) -}
cde2cd82609bc8cad9918396d7e0018a
  department'3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ")"#) -}
66dcba97d757b1434e1036ee8948f3b8
  department'4 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Database.Relations.Student.department'13
                   Database.Relations.Student.department'5
                   GHC.Stack.Types.EmptyCallStack) -}
6708f99806358f998e22ac727ade9b0d
  department'5 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Database.Relations.Student.department'12
                   Database.Relations.Student.department'11
                   Database.Relations.Student.department'10
                   Database.Relations.Student.department'9
                   Database.Relations.Student.department'8
                   Database.Relations.Student.department'7
                   Database.Relations.Student.department'6) -}
c0c420b37bc443246082dd535c52c5d9
  department'6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 76#) -}
2ea35858449d2f6a8d061fe0a02d6057
  department'7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 88#) -}
e31f765afc10232fed4093d29ddf94ad
  department'8 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 31#) -}
c58f85bce554bf33e3fed883c3c07839
  department'9 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 87#) -}
cb93d34496206d7bc993eb32e93f6384
  faculty :: Database.Relations.Student.Student -> GHC.Base.String
  RecSel Left Database.Relations.Student.Student
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Database.Relations.Student.Student) ->
                 case ds of wild { Database.Relations.Student.Student dt dt1 ds1 ds2 ds3 ds4 ->
                 ds2 }) -}
395455ba92065100744158d2c4b2d276
  faculty' ::
    Database.Relational.Query.Pi.Unsafe.Pi
      Database.Relations.Student.Student GHC.Base.String
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                Database.Relations.Student.faculty'1
                  `cast`
                (Sym (Database.Relational.Query.Pi.Unsafe.N:Pi[0]
                          <Database.Relations.Student.Student>_P <GHC.Base.String>_P)) -}
33fd860fe66e37204447c04268b2abf0
  faculty'1 ::
    Database.Record.Persistable.PersistableRecordWidth
      Database.Relations.Student.Student
    -> (Database.Relational.Query.Pi.Unsafe.Pi'
          Database.Relations.Student.Student GHC.Base.String,
        Database.Record.Persistable.ProductConst
          (Data.Monoid.Sum GHC.Types.Int) GHC.Base.String)
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, False)
                (\ (eta1 :: Database.Record.Persistable.PersistableRecordWidth
                              Database.Relations.Student.Student) ->
                 (Database.Relational.Query.Pi.Unsafe.Leftest
                    @ Database.Relations.Student.Student
                    @ GHC.Base.String
                    Database.Relations.Student.faculty'2,
                  Database.Record.Persistable.unsafeValueWidth @ GHC.Base.String)) -}
b7f9cf14a9be9623bc16eb92976af00a
  faculty'2 :: GHC.Types.Int
  {- Unfolding: (case Database.Relations.Student.columnOffsetsStudent of wild { GHC.Arr.Array l u dt ds1 ->
                 case l of wild1 { GHC.Types.I# m ->
                 case u of wild2 { GHC.Types.I# n ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# m 3#) of wild4 {
                   GHC.Types.False
                   -> GHC.Arr.indexError
                        @ GHC.Types.Int
                        @ GHC.Types.Int
                        GHC.Show.$fShowInt
                        (wild1, wild2)
                        Database.Relations.Student.faculty'3
                        Database.Relations.Student.department'14
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# 3# n) of wild5 {
                        GHC.Types.False
                        -> GHC.Arr.indexError
                             @ GHC.Types.Int
                             @ GHC.Types.Int
                             GHC.Show.$fShowInt
                             (wild1, wild2)
                             Database.Relations.Student.faculty'3
                             Database.Relations.Student.department'14
                        GHC.Types.True
                        -> let {
                             w :: GHC.Prim.Int# = GHC.Prim.-# 3# m
                           } in
                           let {
                             $j :: GHC.Prim.Void# -> GHC.Types.Int
                               {- Arity: 1, Strictness: <B,A>x -}
                             = \ (w1 :: GHC.Prim.Void#)[OneShot] ->
                               GHC.Err.error
                                 @ 'GHC.Types.PtrRepLifted
                                 @ GHC.Types.Int
                                 Database.Relations.Student.department'4
                                   `cast`
                                 (Sym (GHC.Classes.N:IP[0]
                                           <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                 (GHC.CString.unpackAppendCString#
                                    "Error in array index; "#
                                    (case GHC.Show.$wshowSignedInt
                                            0#
                                            w
                                            (GHC.Types.[]
                                               @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                                     GHC.Base.++
                                       @ GHC.Types.Char
                                       (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                                       (GHC.CString.unpackAppendCString#
                                          " not in range [0.."#
                                          (case GHC.Show.$wshowSignedInt
                                                  0#
                                                  dt
                                                  (GHC.Types.[]
                                                     @ GHC.Types.Char) of ww1 { (#,#) ww2 ww3 ->
                                           GHC.Base.++
                                             @ GHC.Types.Char
                                             (GHC.Types.: @ GHC.Types.Char ww2 ww3)
                                             Database.Relations.Student.department'3 })) }))
                           } in
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=# 0# w) of wild6 {
                             GHC.Types.False -> $j GHC.Prim.void#
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<# w dt) of wild7 {
                                  GHC.Types.False -> $j GHC.Prim.void#
                                  GHC.Types.True
                                  -> case GHC.Prim.indexArray#
                                            @ GHC.Types.Int
                                            ds1
                                            w of ds4 { Unit# ipv ->
                                     ipv } } } } } } } }) -}
0d911217faaafa674a4d611b8f69af75
  faculty'3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 3#) -}
14808ecdcf5b72bad20f48992eb6d354
  insertQueryStudent ::
    Database.Relational.Query.Monad.BaseType.Relation
      p0 Database.Relations.Student.Student
    -> Database.Relational.Query.Type.InsertQuery p0
  {- Arity: 1, Strictness: <C(C(S(SL))),1*C1(C1(U(1*U,A)))>,
     Unfolding: InlineRule (0, True, True)
                Database.Relations.Student.insertQueryStudent1
                  `cast`
                (forall (p0 :: <*>_N).
                 <Database.Relational.Query.Monad.BaseType.Relation
                    p0 Database.Relations.Student.Student>_R
                 ->_R Sym (Database.Relational.Query.Type.N:InsertQuery[0]
                               <p0>_P)) -}
9096869851c6acf2ddf1a79fd7988490
  insertQueryStudent1 ::
    Database.Relational.Query.Monad.BaseType.Relation
      p0 Database.Relations.Student.Student
    -> GHC.Base.String
  {- Arity: 1, Strictness: <C(C(S(SL))),1*C1(C1(U(1*U,A)))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ p0
                   (eta1 :: Database.Relational.Query.Monad.BaseType.Relation
                              p0 Database.Relations.Student.Student) ->
                 Database.Relational.Query.Type.insertQuerySQL
                   @ Database.Relations.Student.Student
                   @ Database.Relations.Student.Student
                   @ p0
                   Database.Relational.Query.Internal.Config.defaultConfig
                   Database.Relations.Student.tableOfStudent
                   (Database.Relational.Query.Pi.Unsafe.$fCategoryTYPEPi2
                      @ Database.Relations.Student.Student)
                     `cast`
                   (Sym (Database.Relational.Query.Pi.Unsafe.N:Pi[0]
                             <Database.Relations.Student.Student>_P
                             <Database.Relations.Student.Student>_P))
                   eta1) -}
2fe6735bdb387cbfcc1c84f5cb772bcc
  insertStudent ::
    Database.Relational.Query.Type.Insert
      Database.Relations.Student.Student
  {- Unfolding: (case Database.Relational.Query.Type.$wtypedInsertValue'
                        @ Database.Relations.Student.Student
                        @ Database.Relations.Student.Student
                        Database.Relational.Query.Internal.Config.defaultConfig
                        Database.Relations.Student.tableOfStudent
                        Database.Relations.Student.insertStudent1
                          `cast`
                        (Sym (Database.Relational.Query.Effect.N:InsertTarget[0]
                                  <Database.Relations.Student.Student>_N
                                  <Database.Relations.Student.Student>_N)) of ww { (#,#) ww1 ww2 ->
                 Database.Relational.Query.Type.Insert
                   @ Database.Relations.Student.Student
                   ww1
                   ww2 }) -}
d36c608c5c6e3b0876958533411c276c
  insertStudent1 ::
    Database.Relational.Query.Monad.Register.Register
      Database.Relations.Student.Student
      (Database.Relational.Query.Projectable.PlaceHolders
         Database.Relations.Student.Student)
  {- Unfolding: (Database.Relational.Query.Effect.piRegister
                   @ Database.Relations.Student.Student
                   @ Database.Relations.Student.Student
                   (case Database.Record.Persistable.offsets
                           (GHC.Types.:
                              @ GHC.Types.Int
                              (Database.Record.Persistable.unsafeValueWidth @ GHC.Int.Int32)
                                `cast`
                              (Trans
                                   (Database.Record.Persistable.N:ProductConst[0] <Data.Monoid.Sum
                                                                                     GHC.Types.Int>_N <GHC.Int.Int32>_N)
                                   (Trans
                                        (Data.Functor.Const.N:Const[0]
                                             <*>_N
                                             <Data.Monoid.Sum GHC.Types.Int>_R
                                             <GHC.Int.Int32>_P)
                                        (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R)))
                              (GHC.Types.:
                                 @ GHC.Types.Int
                                 (Database.Record.Persistable.unsafeValueWidth @ GHC.Int.Int32)
                                   `cast`
                                 (Trans
                                      (Database.Record.Persistable.N:ProductConst[0] <Data.Monoid.Sum
                                                                                        GHC.Types.Int>_N <GHC.Int.Int32>_N)
                                      (Trans
                                           (Data.Functor.Const.N:Const[0]
                                                <*>_N
                                                <Data.Monoid.Sum GHC.Types.Int>_R
                                                <GHC.Int.Int32>_P)
                                           (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R)))
                                 (GHC.Types.:
                                    @ GHC.Types.Int
                                    (Database.Record.Persistable.unsafeValueWidth @ GHC.Base.String)
                                      `cast`
                                    (Trans
                                         (Database.Record.Persistable.N:ProductConst[0] <Data.Monoid.Sum
                                                                                           GHC.Types.Int>_N <[GHC.Types.Char]>_N)
                                         (Trans
                                              (Data.Functor.Const.N:Const[0]
                                                   <*>_N
                                                   <Data.Monoid.Sum GHC.Types.Int>_R
                                                   <[GHC.Types.Char]>_P)
                                              (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R)))
                                    (GHC.Types.:
                                       @ GHC.Types.Int
                                       (Database.Record.Persistable.unsafeValueWidth
                                          @ GHC.Base.String)
                                         `cast`
                                       (Trans
                                            (Database.Record.Persistable.N:ProductConst[0] <Data.Monoid.Sum
                                                                                              GHC.Types.Int>_N <[GHC.Types.Char]>_N)
                                            (Trans
                                                 (Data.Functor.Const.N:Const[0]
                                                      <*>_N
                                                      <Data.Monoid.Sum GHC.Types.Int>_R
                                                      <[GHC.Types.Char]>_P)
                                                 (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R)))
                                       (GHC.Types.:
                                          @ GHC.Types.Int
                                          (Database.Record.Persistable.unsafeValueWidth
                                             @ GHC.Base.String)
                                            `cast`
                                          (Trans
                                               (Database.Record.Persistable.N:ProductConst[0] <Data.Monoid.Sum
                                                                                                 GHC.Types.Int>_N <[GHC.Types.Char]>_N)
                                               (Trans
                                                    (Data.Functor.Const.N:Const[0]
                                                         <*>_N
                                                         <Data.Monoid.Sum GHC.Types.Int>_R
                                                         <[GHC.Types.Char]>_P)
                                                    (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R)))
                                          (GHC.Types.:
                                             @ GHC.Types.Int
                                             (Database.Record.Persistable.unsafeValueWidth
                                                @ GHC.Base.String)
                                               `cast`
                                             (Trans
                                                  (Database.Record.Persistable.N:ProductConst[0] <Data.Monoid.Sum
                                                                                                    GHC.Types.Int>_N <[GHC.Types.Char]>_N)
                                                  (Trans
                                                       (Data.Functor.Const.N:Const[0]
                                                            <*>_N
                                                            <Data.Monoid.Sum GHC.Types.Int>_R
                                                            <[GHC.Types.Char]>_P)
                                                       (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R)))
                                             (GHC.Types.[]
                                                @ GHC.Types.Int))))))) of wild { GHC.Arr.Array l u dt ds ->
                    case l of wild1 { GHC.Types.I# m ->
                    case u of wild2 { GHC.Types.I# n ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# m n) of wild4 {
                      GHC.Types.False
                      -> (GHC.Arr.indexError
                            @ GHC.Types.Int
                            @ GHC.Types.Int
                            GHC.Show.$fShowInt
                            (wild1, wild2)
                            wild2
                            (GHC.CString.unpackCString# "Int"#))
                           `cast`
                         (Trans
                              (Sym (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R))
                              (Trans
                                   (Sym (Data.Functor.Const.N:Const[0]
                                             <*>_N
                                             <Data.Monoid.Sum GHC.Types.Int>_R
                                             <Database.Relations.Student.Student>_P))
                                   (Trans
                                        (Sym (Database.Record.Persistable.N:ProductConst[0]) <Data.Monoid.Sum
                                                                                                GHC.Types.Int>_N)
                                        (Sym (Database.Record.Persistable.N:PersistableWidth[0])) <Database.Relations.Student.Student>_N)))
                      GHC.Types.True
                      -> case GHC.Prim.indexArray#
                                @ GHC.Types.Int
                                ds
                                (GHC.Prim.-# n m) of ds4 { Unit# ipv ->
                         ipv
                           `cast`
                         (Trans
                              (Sym (Data.Monoid.N:Sum[0] <GHC.Types.Int>_R))
                              (Trans
                                   (Sym (Data.Functor.Const.N:Const[0]
                                             <*>_N
                                             <Data.Monoid.Sum GHC.Types.Int>_R
                                             <Database.Relations.Student.Student>_P))
                                   (Trans
                                        (Sym (Database.Record.Persistable.N:ProductConst[0]) <Data.Monoid.Sum
                                                                                                GHC.Types.Int>_N)
                                        (Sym (Database.Record.Persistable.N:PersistableWidth[0])) <Database.Relations.Student.Student>_N))) } } } } })
                   (Database.Relational.Query.Pi.Unsafe.$fCategoryTYPEPi2
                      @ Database.Relations.Student.Student)
                     `cast`
                   (Sym (Database.Relational.Query.Pi.Unsafe.N:Pi[0]
                             <Database.Relations.Student.Student>_P
                             <Database.Relations.Student.Student>_P))) -}
a7514900a20fc64f9a27644746ca9fc1
  name :: Database.Relations.Student.Student -> GHC.Base.String
  RecSel Left Database.Relations.Student.Student
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Database.Relations.Student.Student) ->
                 case ds of wild { Database.Relations.Student.Student dt dt1 ds1 ds2 ds3 ds4 ->
                 ds1 }) -}
5dc30bec981704830eb38d9625872706
  name' ::
    Database.Relational.Query.Pi.Unsafe.Pi
      Database.Relations.Student.Student GHC.Base.String
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                Database.Relations.Student.name'1
                  `cast`
                (Sym (Database.Relational.Query.Pi.Unsafe.N:Pi[0]
                          <Database.Relations.Student.Student>_P <GHC.Base.String>_P)) -}
cf258125f934804a788ac6f71e061c06
  name'1 ::
    Database.Record.Persistable.PersistableRecordWidth
      Database.Relations.Student.Student
    -> (Database.Relational.Query.Pi.Unsafe.Pi'
          Database.Relations.Student.Student GHC.Base.String,
        Database.Record.Persistable.ProductConst
          (Data.Monoid.Sum GHC.Types.Int) GHC.Base.String)
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, False)
                (\ (eta1 :: Database.Record.Persistable.PersistableRecordWidth
                              Database.Relations.Student.Student) ->
                 (Database.Relational.Query.Pi.Unsafe.Leftest
                    @ Database.Relations.Student.Student
                    @ GHC.Base.String
                    Database.Relations.Student.name'2,
                  Database.Record.Persistable.unsafeValueWidth @ GHC.Base.String)) -}
c735e8865774b1ee35e25abc038d0392
  name'2 :: GHC.Types.Int
  {- Unfolding: (case Database.Relations.Student.columnOffsetsStudent of wild { GHC.Arr.Array l u dt ds1 ->
                 case l of wild1 { GHC.Types.I# m ->
                 case u of wild2 { GHC.Types.I# n ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# m 2#) of wild4 {
                   GHC.Types.False
                   -> GHC.Arr.indexError
                        @ GHC.Types.Int
                        @ GHC.Types.Int
                        GHC.Show.$fShowInt
                        (wild1, wild2)
                        Database.Relations.Student.name'3
                        Database.Relations.Student.department'14
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# 2# n) of wild5 {
                        GHC.Types.False
                        -> GHC.Arr.indexError
                             @ GHC.Types.Int
                             @ GHC.Types.Int
                             GHC.Show.$fShowInt
                             (wild1, wild2)
                             Database.Relations.Student.name'3
                             Database.Relations.Student.department'14
                        GHC.Types.True
                        -> let {
                             w :: GHC.Prim.Int# = GHC.Prim.-# 2# m
                           } in
                           let {
                             $j :: GHC.Prim.Void# -> GHC.Types.Int
                               {- Arity: 1, Strictness: <B,A>x -}
                             = \ (w1 :: GHC.Prim.Void#)[OneShot] ->
                               GHC.Err.error
                                 @ 'GHC.Types.PtrRepLifted
                                 @ GHC.Types.Int
                                 Database.Relations.Student.department'4
                                   `cast`
                                 (Sym (GHC.Classes.N:IP[0]
                                           <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                 (GHC.CString.unpackAppendCString#
                                    "Error in array index; "#
                                    (case GHC.Show.$wshowSignedInt
                                            0#
                                            w
                                            (GHC.Types.[]
                                               @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                                     GHC.Base.++
                                       @ GHC.Types.Char
                                       (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                                       (GHC.CString.unpackAppendCString#
                                          " not in range [0.."#
                                          (case GHC.Show.$wshowSignedInt
                                                  0#
                                                  dt
                                                  (GHC.Types.[]
                                                     @ GHC.Types.Char) of ww1 { (#,#) ww2 ww3 ->
                                           GHC.Base.++
                                             @ GHC.Types.Char
                                             (GHC.Types.: @ GHC.Types.Char ww2 ww3)
                                             Database.Relations.Student.department'3 })) }))
                           } in
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=# 0# w) of wild6 {
                             GHC.Types.False -> $j GHC.Prim.void#
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<# w dt) of wild7 {
                                  GHC.Types.False -> $j GHC.Prim.void#
                                  GHC.Types.True
                                  -> case GHC.Prim.indexArray#
                                            @ GHC.Types.Int
                                            ds1
                                            w of ds4 { Unit# ipv ->
                                     ipv } } } } } } } }) -}
6bddd0a58923cdc07cf0b45d36042b3b
  name'3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 2#) -}
9d618e9c374e3b55a165d76e09d7f035
  selectStudent ::
    Database.Relational.Query.Type.Query
      GHC.Int.Int32 Database.Relations.Student.Student
  {- Unfolding: InlineRule (0, True, True)
                Database.Relations.Student.selectStudent1
                  `cast`
                (Sym (Database.Relational.Query.Type.N:Query[0]
                          <GHC.Int.Int32>_P <Database.Relations.Student.Student>_P)) -}
d38153f104a62d46d1d69792780e173f
  selectStudent1 :: GHC.Base.String
  {- Unfolding: (Database.Relational.Query.Type.relationalQuerySQL
                   @ GHC.Int.Int32
                   @ Database.Relations.Student.Student
                   Database.Relational.Query.Internal.Config.defaultConfig
                   Database.Relations.Student.selectStudent2
                   (GHC.Types.[] @ Language.SQL.Keyword.Internal.Type.Keyword)) -}
f1c5cdff80b4f67fcf39a8f7d0aefab8
  selectStudent2 ::
    Database.Relational.Query.Monad.BaseType.Relation
      GHC.Int.Int32 Database.Relations.Student.Student
  {- Unfolding: (Database.Relational.Query.Derives.specifiedKey
                   @ GHC.Int.Int32
                   @ Database.Relations.Student.Student
                   (Database.Record.Persistable.unsafeValueWidth @ GHC.Int.Int32)
                     `cast`
                   (Sym (Database.Record.Persistable.N:PersistableWidth[0]) <GHC.Int.Int32>_N)
                   Database.Relations.Student.selectStudent4
                     `cast`
                   (Sym (Database.Relational.Query.Pi.Unsafe.N:Pi[0]
                             <Database.Relations.Student.Student>_P <GHC.Int.Int32>_P))
                   Database.Relations.Student.selectStudent3
                     `cast`
                   (Trans
                        (<GHC.Types.Int>_R
                         ->_R Trans
                                  (<Database.Relational.Query.Internal.Config.Config>_R
                                   ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                 <(Database.Relational.Query.Internal.Sub.SubQuery,
                                                   GHC.Types.Int)>_R))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                 <*>_N
                                                 <Database.Relational.Query.Internal.Config.Config>_R
                                                 <Data.Functor.Identity.Identity>_R
                                                 <(Database.Relational.Query.Internal.Sub.SubQuery,
                                                   GHC.Types.Int)>_N))
                                       (Sym (Database.Relational.Query.Monad.Trans.Config.N:QueryConfig[0]) <Data.Functor.Identity.Identity>_N <(Database.Relational.Query.Internal.Sub.SubQuery,
                                                                                                                                                 GHC.Types.Int)>_N)))
                        (Trans
                             (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                       <GHC.Types.Int>_N
                                       <Database.Relational.Query.Monad.Trans.Config.QueryConfig
                                          Data.Functor.Identity.Identity>_R
                                       <Database.Relational.Query.Internal.Sub.SubQuery>_N))
                             (Trans
                                  (Sym (Database.Relational.Query.Monad.Trans.Qualify.N:Qualify[0]) <Database.Relational.Query.Monad.Trans.Config.QueryConfig
                                                                                                       Data.Functor.Identity.Identity>_N <Database.Relational.Query.Internal.Sub.SubQuery>_N)
                                  (Sym (Database.Relational.Query.Monad.BaseType.N:Relation[0]
                                            <()>_P <Database.Relations.Student.Student>_P)))))) -}
cecfea58f71f6417080cd538c8802e3d
  selectStudent3 ::
    GHC.Types.Int
    -> Database.Relational.Query.Internal.Config.Config
    -> (Database.Relational.Query.Internal.Sub.SubQuery, GHC.Types.Int)
  {- Arity: 2, Strictness: <L,U><L,A>m,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: GHC.Types.Int)
                   (eta1 :: Database.Relational.Query.Internal.Config.Config) ->
                 (Database.Relational.Query.Internal.Sub.Table
                    Database.Relations.Student.tableOfStudent
                      `cast`
                    (Database.Relational.Query.Table.N:Table[0]
                         <Database.Relations.Student.Student>_P),
                  eta)) -}
7b981eb26ac52e29fb916bef5dceced2
  selectStudent4 ::
    Database.Record.Persistable.PersistableRecordWidth
      Database.Relations.Student.Student
    -> (Database.Relational.Query.Pi.Unsafe.Pi'
          Database.Relations.Student.Student GHC.Int.Int32,
        Database.Record.Persistable.PersistableRecordWidth GHC.Int.Int32)
  {- Arity: 1,
     Unfolding: (\ (eta1 :: Database.Record.Persistable.PersistableRecordWidth
                              Database.Relations.Student.Student) ->
                 Database.Relations.Student.selectStudent_lvl44) -}
804afbda53e63b484240a66599780cbe
  selectStudent_lvl43 ::
    Database.Relational.Query.Pi.Unsafe.Pi'
      Database.Relations.Student.Student GHC.Int.Int32
  {- HasNoCafRefs,
     Unfolding: (Database.Relational.Query.Pi.Unsafe.Map
                   @ Database.Relations.Student.Student
                   @ GHC.Int.Int32
                   Database.Relations.Student.$fHasConstraintKeyPrimaryStudentInt1) -}
dd9c99a58df8ffac4e3c8edba8654391
  selectStudent_lvl44 ::
    (Database.Relational.Query.Pi.Unsafe.Pi'
       Database.Relations.Student.Student GHC.Int.Int32,
     Database.Record.Persistable.PersistableRecordWidth GHC.Int.Int32)
  {- Strictness: m,
     Unfolding: ((Database.Relations.Student.selectStudent_lvl43,
                  Database.Record.Persistable.unsafeValueWidth @ GHC.Int.Int32)) -}
978a059a1f499465d981b94c08fd6d46
  semester :: Database.Relations.Student.Student -> GHC.Base.String
  RecSel Left Database.Relations.Student.Student
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Database.Relations.Student.Student) ->
                 case ds of wild { Database.Relations.Student.Student dt dt1 ds1 ds2 ds3 ds4 ->
                 ds4 }) -}
d6ef82cf8cada259f4da7e196174c327
  semester' ::
    Database.Relational.Query.Pi.Unsafe.Pi
      Database.Relations.Student.Student GHC.Base.String
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                Database.Relations.Student.semester'1
                  `cast`
                (Sym (Database.Relational.Query.Pi.Unsafe.N:Pi[0]
                          <Database.Relations.Student.Student>_P <GHC.Base.String>_P)) -}
67c6616dc1e936d3adcc322b17fa2765
  semester'1 ::
    Database.Record.Persistable.PersistableRecordWidth
      Database.Relations.Student.Student
    -> (Database.Relational.Query.Pi.Unsafe.Pi'
          Database.Relations.Student.Student GHC.Base.String,
        Database.Record.Persistable.ProductConst
          (Data.Monoid.Sum GHC.Types.Int) GHC.Base.String)
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, False)
                (\ (eta1 :: Database.Record.Persistable.PersistableRecordWidth
                              Database.Relations.Student.Student) ->
                 (Database.Relational.Query.Pi.Unsafe.Leftest
                    @ Database.Relations.Student.Student
                    @ GHC.Base.String
                    Database.Relations.Student.semester'2,
                  Database.Record.Persistable.unsafeValueWidth @ GHC.Base.String)) -}
0810f726d1c858961333e176f3bd390d
  semester'2 :: GHC.Types.Int
  {- Unfolding: (case Database.Relations.Student.columnOffsetsStudent of wild { GHC.Arr.Array l u dt ds1 ->
                 case l of wild1 { GHC.Types.I# m ->
                 case u of wild2 { GHC.Types.I# n ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# m 5#) of wild4 {
                   GHC.Types.False
                   -> GHC.Arr.indexError
                        @ GHC.Types.Int
                        @ GHC.Types.Int
                        GHC.Show.$fShowInt
                        (wild1, wild2)
                        Database.Relations.Student.semester'3
                        Database.Relations.Student.department'14
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# 5# n) of wild5 {
                        GHC.Types.False
                        -> GHC.Arr.indexError
                             @ GHC.Types.Int
                             @ GHC.Types.Int
                             GHC.Show.$fShowInt
                             (wild1, wild2)
                             Database.Relations.Student.semester'3
                             Database.Relations.Student.department'14
                        GHC.Types.True
                        -> let {
                             w :: GHC.Prim.Int# = GHC.Prim.-# 5# m
                           } in
                           let {
                             $j :: GHC.Prim.Void# -> GHC.Types.Int
                               {- Arity: 1, Strictness: <B,A>x -}
                             = \ (w1 :: GHC.Prim.Void#)[OneShot] ->
                               GHC.Err.error
                                 @ 'GHC.Types.PtrRepLifted
                                 @ GHC.Types.Int
                                 Database.Relations.Student.department'4
                                   `cast`
                                 (Sym (GHC.Classes.N:IP[0]
                                           <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                 (GHC.CString.unpackAppendCString#
                                    "Error in array index; "#
                                    (case GHC.Show.$wshowSignedInt
                                            0#
                                            w
                                            (GHC.Types.[]
                                               @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                                     GHC.Base.++
                                       @ GHC.Types.Char
                                       (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                                       (GHC.CString.unpackAppendCString#
                                          " not in range [0.."#
                                          (case GHC.Show.$wshowSignedInt
                                                  0#
                                                  dt
                                                  (GHC.Types.[]
                                                     @ GHC.Types.Char) of ww1 { (#,#) ww2 ww3 ->
                                           GHC.Base.++
                                             @ GHC.Types.Char
                                             (GHC.Types.: @ GHC.Types.Char ww2 ww3)
                                             Database.Relations.Student.department'3 })) }))
                           } in
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=# 0# w) of wild6 {
                             GHC.Types.False -> $j GHC.Prim.void#
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<# w dt) of wild7 {
                                  GHC.Types.False -> $j GHC.Prim.void#
                                  GHC.Types.True
                                  -> case GHC.Prim.indexArray#
                                            @ GHC.Types.Int
                                            ds1
                                            w of ds4 { Unit# ipv ->
                                     ipv } } } } } } } }) -}
56bf1327282e9ab4d61e2c643047a830
  semester'3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
468e79006112b305b316737a2ca80cd3
  student ::
    Database.Relational.Query.Monad.BaseType.Relation
      () Database.Relations.Student.Student
  {- Arity: 2, Strictness: <L,U><L,A>m,
     Unfolding: InlineRule (0, True, True)
                Database.Relations.Student.selectStudent3
                  `cast`
                (Trans
                     (<GHC.Types.Int>_R
                      ->_R Trans
                               (<Database.Relational.Query.Internal.Config.Config>_R
                                ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                              <(Database.Relational.Query.Internal.Sub.SubQuery,
                                                GHC.Types.Int)>_R))
                               (Trans
                                    (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                              <*>_N
                                              <Database.Relational.Query.Internal.Config.Config>_R
                                              <Data.Functor.Identity.Identity>_R
                                              <(Database.Relational.Query.Internal.Sub.SubQuery,
                                                GHC.Types.Int)>_N))
                                    (Sym (Database.Relational.Query.Monad.Trans.Config.N:QueryConfig[0]) <Data.Functor.Identity.Identity>_N <(Database.Relational.Query.Internal.Sub.SubQuery,
                                                                                                                                              GHC.Types.Int)>_N)))
                     (Trans
                          (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                    <GHC.Types.Int>_N
                                    <Database.Relational.Query.Monad.Trans.Config.QueryConfig
                                       Data.Functor.Identity.Identity>_R
                                    <Database.Relational.Query.Internal.Sub.SubQuery>_N))
                          (Trans
                               (Sym (Database.Relational.Query.Monad.Trans.Qualify.N:Qualify[0]) <Database.Relational.Query.Monad.Trans.Config.QueryConfig
                                                                                                    Data.Functor.Identity.Identity>_N <Database.Relational.Query.Internal.Sub.SubQuery>_N)
                               (Sym (Database.Relational.Query.Monad.BaseType.N:Relation[0]
                                         <()>_P <Database.Relations.Student.Student>_P))))) -}
1c673140e30765d9614137e0a4afb5fd
  studentId :: Database.Relations.Student.Student -> GHC.Int.Int32
  RecSel Left Database.Relations.Student.Student
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(U,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Database.Relations.Student.Student) ->
                 case ds of wild { Database.Relations.Student.Student dt dt1 ds1 ds2 ds3 ds4 ->
                 GHC.Int.I32# dt }) -}
f7b4f03cd4dedebba5fe980c1f5212b9
  studentId' ::
    Database.Relational.Query.Pi.Unsafe.Pi
      Database.Relations.Student.Student GHC.Int.Int32
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                Database.Relations.Student.studentId'1
                  `cast`
                (Sym (Database.Relational.Query.Pi.Unsafe.N:Pi[0]
                          <Database.Relations.Student.Student>_P <GHC.Int.Int32>_P)) -}
08e84d94a5f5d39f3b27fe86b937341f
  studentId'1 ::
    Database.Record.Persistable.PersistableRecordWidth
      Database.Relations.Student.Student
    -> (Database.Relational.Query.Pi.Unsafe.Pi'
          Database.Relations.Student.Student GHC.Int.Int32,
        Database.Record.Persistable.ProductConst
          (Data.Monoid.Sum GHC.Types.Int) GHC.Int.Int32)
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, False)
                (\ (eta1 :: Database.Record.Persistable.PersistableRecordWidth
                              Database.Relations.Student.Student) ->
                 (Database.Relational.Query.Pi.Unsafe.Leftest
                    @ Database.Relations.Student.Student
                    @ GHC.Int.Int32
                    Database.Relations.Student.studentId'2,
                  Database.Record.Persistable.unsafeValueWidth @ GHC.Int.Int32)) -}
c362be2981b6dbc6222f63d41af3de5a
  studentId'2 :: GHC.Types.Int
  {- Unfolding: (case Database.Relations.Student.columnOffsetsStudent of wild { GHC.Arr.Array l u dt ds1 ->
                 case l of wild1 { GHC.Types.I# m ->
                 case u of wild2 { GHC.Types.I# n ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# m 0#) of wild4 {
                   GHC.Types.False
                   -> GHC.Arr.indexError
                        @ GHC.Types.Int
                        @ GHC.Types.Int
                        GHC.Show.$fShowInt
                        (wild1, wild2)
                        Database.Relations.Student.$fHasColumnConstraintNotNullStudent1
                        Database.Relations.Student.department'14
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# 0# n) of wild5 {
                        GHC.Types.False
                        -> GHC.Arr.indexError
                             @ GHC.Types.Int
                             @ GHC.Types.Int
                             GHC.Show.$fShowInt
                             (wild1, wild2)
                             Database.Relations.Student.$fHasColumnConstraintNotNullStudent1
                             Database.Relations.Student.department'14
                        GHC.Types.True
                        -> let {
                             w :: GHC.Prim.Int# = GHC.Prim.-# 0# m
                           } in
                           let {
                             $j :: GHC.Prim.Void# -> GHC.Types.Int
                               {- Arity: 1, Strictness: <B,A>x -}
                             = \ (w1 :: GHC.Prim.Void#)[OneShot] ->
                               GHC.Err.error
                                 @ 'GHC.Types.PtrRepLifted
                                 @ GHC.Types.Int
                                 Database.Relations.Student.department'4
                                   `cast`
                                 (Sym (GHC.Classes.N:IP[0]
                                           <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                 (GHC.CString.unpackAppendCString#
                                    "Error in array index; "#
                                    (case GHC.Show.$wshowSignedInt
                                            0#
                                            w
                                            (GHC.Types.[]
                                               @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                                     GHC.Base.++
                                       @ GHC.Types.Char
                                       (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                                       (GHC.CString.unpackAppendCString#
                                          " not in range [0.."#
                                          (case GHC.Show.$wshowSignedInt
                                                  0#
                                                  dt
                                                  (GHC.Types.[]
                                                     @ GHC.Types.Char) of ww1 { (#,#) ww2 ww3 ->
                                           GHC.Base.++
                                             @ GHC.Types.Char
                                             (GHC.Types.: @ GHC.Types.Char ww2 ww3)
                                             Database.Relations.Student.department'3 })) }))
                           } in
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=# 0# w) of wild6 {
                             GHC.Types.False -> $j GHC.Prim.void#
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<# w dt) of wild7 {
                                  GHC.Types.False -> $j GHC.Prim.void#
                                  GHC.Types.True
                                  -> case GHC.Prim.indexArray#
                                            @ GHC.Types.Int
                                            ds1
                                            w of ds4 { Unit# ipv ->
                                     ipv } } } } } } } }) -}
53cb97c4b3603ce02aac2a9388abdabb
  studentNumber ::
    Database.Relations.Student.Student -> GHC.Int.Int32
  RecSel Left Database.Relations.Student.Student
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,U,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Database.Relations.Student.Student) ->
                 case ds of wild { Database.Relations.Student.Student dt dt1 ds1 ds2 ds3 ds4 ->
                 GHC.Int.I32# dt1 }) -}
7e8f006909308e83226c09a7bc06e31e
  studentNumber' ::
    Database.Relational.Query.Pi.Unsafe.Pi
      Database.Relations.Student.Student GHC.Int.Int32
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                Database.Relations.Student.studentNumber'1
                  `cast`
                (Sym (Database.Relational.Query.Pi.Unsafe.N:Pi[0]
                          <Database.Relations.Student.Student>_P <GHC.Int.Int32>_P)) -}
e56cbaa9c51ecadc0e350f6c28e322af
  studentNumber'1 ::
    Database.Record.Persistable.PersistableRecordWidth
      Database.Relations.Student.Student
    -> (Database.Relational.Query.Pi.Unsafe.Pi'
          Database.Relations.Student.Student GHC.Int.Int32,
        Database.Record.Persistable.ProductConst
          (Data.Monoid.Sum GHC.Types.Int) GHC.Int.Int32)
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, False)
                (\ (eta1 :: Database.Record.Persistable.PersistableRecordWidth
                              Database.Relations.Student.Student) ->
                 (Database.Relational.Query.Pi.Unsafe.Leftest
                    @ Database.Relations.Student.Student
                    @ GHC.Int.Int32
                    Database.Relations.Student.studentNumber'2,
                  Database.Record.Persistable.unsafeValueWidth @ GHC.Int.Int32)) -}
e1cf958f55f4ee047b7867b45626bfa1
  studentNumber'2 :: GHC.Types.Int
  {- Unfolding: (case Database.Relations.Student.columnOffsetsStudent of wild { GHC.Arr.Array l u dt ds1 ->
                 case l of wild1 { GHC.Types.I# m ->
                 case u of wild2 { GHC.Types.I# n ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# m 1#) of wild4 {
                   GHC.Types.False
                   -> GHC.Arr.indexError
                        @ GHC.Types.Int
                        @ GHC.Types.Int
                        GHC.Show.$fShowInt
                        (wild1, wild2)
                        Database.Relations.Student.studentNumber'3
                        Database.Relations.Student.department'14
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# 1# n) of wild5 {
                        GHC.Types.False
                        -> GHC.Arr.indexError
                             @ GHC.Types.Int
                             @ GHC.Types.Int
                             GHC.Show.$fShowInt
                             (wild1, wild2)
                             Database.Relations.Student.studentNumber'3
                             Database.Relations.Student.department'14
                        GHC.Types.True
                        -> let {
                             w :: GHC.Prim.Int# = GHC.Prim.-# 1# m
                           } in
                           let {
                             $j :: GHC.Prim.Void# -> GHC.Types.Int
                               {- Arity: 1, Strictness: <B,A>x -}
                             = \ (w1 :: GHC.Prim.Void#)[OneShot] ->
                               GHC.Err.error
                                 @ 'GHC.Types.PtrRepLifted
                                 @ GHC.Types.Int
                                 Database.Relations.Student.department'4
                                   `cast`
                                 (Sym (GHC.Classes.N:IP[0]
                                           <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                 (GHC.CString.unpackAppendCString#
                                    "Error in array index; "#
                                    (case GHC.Show.$wshowSignedInt
                                            0#
                                            w
                                            (GHC.Types.[]
                                               @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                                     GHC.Base.++
                                       @ GHC.Types.Char
                                       (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                                       (GHC.CString.unpackAppendCString#
                                          " not in range [0.."#
                                          (case GHC.Show.$wshowSignedInt
                                                  0#
                                                  dt
                                                  (GHC.Types.[]
                                                     @ GHC.Types.Char) of ww1 { (#,#) ww2 ww3 ->
                                           GHC.Base.++
                                             @ GHC.Types.Char
                                             (GHC.Types.: @ GHC.Types.Char ww2 ww3)
                                             Database.Relations.Student.department'3 })) }))
                           } in
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=# 0# w) of wild6 {
                             GHC.Types.False -> $j GHC.Prim.void#
                             GHC.Types.True
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<# w dt) of wild7 {
                                  GHC.Types.False -> $j GHC.Prim.void#
                                  GHC.Types.True
                                  -> case GHC.Prim.indexArray#
                                            @ GHC.Types.Int
                                            ds1
                                            w of ds4 { Unit# ipv ->
                                     ipv } } } } } } } }) -}
3f2413e694e355c536b3093d973ca300
  studentNumber'3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1#) -}
f8b27d68bc355eaf4dff6876392cc31e
  tableOfStudent ::
    Database.Relational.Query.Table.Table
      Database.Relations.Student.Student
  {- Unfolding: (case Database.Relational.Query.Table.$wtable
                        @ Database.Relations.Student.Student
                        Database.Relations.Student.tableOfStudent13
                        Database.Relations.Student.tableOfStudent1 of ww { (#,,#) ww1 ww2 ww3 ->
                 (Database.Relational.Query.Internal.UntypedTable.Untyped
                    ww1
                    ww2
                    ww3)
                   `cast`
                 (Sym (Database.Relational.Query.Table.N:Table[0]
                           <Database.Relations.Student.Student>_P)) }) -}
4d3eb975178835cbc477b3c0b2a0211f
  tableOfStudent1 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Database.Relations.Student.tableOfStudent12
                   Database.Relations.Student.tableOfStudent2) -}
cea1454543d1bf4573a3c4dce5160562
  tableOfStudent10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "name"#) -}
c3ce39ddd3177c9d9776648ee5897c41
  tableOfStudent11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "student_number"#) -}
c2d5e5afddc25939a65a01a0ec3f9f17
  tableOfStudent12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "student_id"#) -}
ea6328b8c34c1d4b88a2221010bf181b
  tableOfStudent13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PUBLIC.student"#) -}
8061d22d3503e6c99b83379f6dfd94e2
  tableOfStudent2 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Database.Relations.Student.tableOfStudent11
                   Database.Relations.Student.tableOfStudent3) -}
e8dbaf41451c3b8e7e9453f4894e90e6
  tableOfStudent3 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Database.Relations.Student.tableOfStudent10
                   Database.Relations.Student.tableOfStudent4) -}
3d32317aecf4b956a275be2621c448ff
  tableOfStudent4 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Database.Relations.Student.tableOfStudent9
                   Database.Relations.Student.tableOfStudent5) -}
6534b9337768f07ccc5ab4cf70ff18f8
  tableOfStudent5 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Database.Relations.Student.tableOfStudent8
                   Database.Relations.Student.tableOfStudent6) -}
9e85b4e96ace8f2dd06ad8a604d825b3
  tableOfStudent6 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Database.Relations.Student.tableOfStudent7
                   (GHC.Types.[] @ GHC.Base.String)) -}
bf0000fb6f21e6aee605850a83b304d4
  tableOfStudent7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "semester"#) -}
ed6152a5dd3a4dbcc7d2be55ebce18be
  tableOfStudent8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "department"#) -}
e22e1f6761f256f47784a95b2262c962
  tableOfStudent9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "faculty"#) -}
f7e5c2def29850c606722a8c50d6dd2c
  updateStudent ::
    Database.Relational.Query.Type.KeyUpdate
      GHC.Int.Int32 Database.Relations.Student.Student
  {- Strictness: m,
     Unfolding: (Database.Relational.Query.Type.KeyUpdate
                   @ GHC.Int.Int32
                   @ Database.Relations.Student.Student
                   Database.Relations.Student.updateStudent_key
                     `cast`
                   (Sym (Database.Relational.Query.Pi.Unsafe.N:Pi[0]
                             <Database.Relations.Student.Student>_P <GHC.Int.Int32>_P))
                   Database.Relations.Student.updateStudent1) -}
bee4ad051c76dbf4751c8f41e0e387fd
  updateStudent1 :: GHC.Base.String
  {- Unfolding: (Database.Relational.Query.SQL.updateOtherThanKeySQL
                   @ Database.Relations.Student.Student
                   @ GHC.Int.Int32
                   Database.Relations.Student.tableOfStudent
                   Database.Relations.Student.updateStudent_key
                     `cast`
                   (Sym (Database.Relational.Query.Pi.Unsafe.N:Pi[0]
                             <Database.Relations.Student.Student>_P <GHC.Int.Int32>_P))) -}
08c075c1eb0007d1764332089560a9d1
  updateStudent_key ::
    Database.Record.Persistable.PersistableRecordWidth
      Database.Relations.Student.Student
    -> (Database.Relational.Query.Pi.Unsafe.Pi'
          Database.Relations.Student.Student GHC.Int.Int32,
        Database.Record.Persistable.PersistableRecordWidth GHC.Int.Int32)
  {- Arity: 1, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, False)
                (\ (eta2 :: Database.Record.Persistable.PersistableRecordWidth
                              Database.Relations.Student.Student) ->
                 (Database.Relational.Query.Pi.Unsafe.Map
                    @ Database.Relations.Student.Student
                    @ GHC.Int.Int32
                    Database.Relations.Student.$fHasConstraintKeyPrimaryStudentInt1,
                  Database.Record.Persistable.unsafeValueWidth @ GHC.Int.Int32)) -}
instance Database.Record.FromSql.FromSql [Database.HDBC.SqlValue.SqlValue,
                                          Database.Relations.Student.Student]
  = Database.Relations.Student.$fFromSqlSqlValueStudent
instance GHC.Generics.Generic [Database.Relations.Student.Student]
  = Database.Relations.Student.$fGenericStudent
instance Database.Record.KeyConstraint.HasColumnConstraint [Database.Record.KeyConstraint.NotNull,
                                                            Database.Relations.Student.Student]
  = Database.Relations.Student.$fHasColumnConstraintNotNullStudent
instance Database.Record.KeyConstraint.HasColumnConstraint [Database.Record.KeyConstraint.Primary,
                                                            Database.Relations.Student.Student]
  = Database.Relations.Student.$fHasColumnConstraintPrimaryStudent
instance Database.Relational.Query.Constraint.HasConstraintKey [Database.Record.KeyConstraint.Primary,
                                                                Database.Relations.Student.Student,
                                                                GHC.Int.Int32]
  = Database.Relations.Student.$fHasConstraintKeyPrimaryStudentInt32
instance Database.Record.KeyConstraint.HasKeyConstraint [Database.Record.KeyConstraint.Primary,
                                                         Database.Relations.Student.Student]
  = Database.Relations.Student.$fHasKeyConstraintPrimaryStudent
instance Database.Record.Persistable.PersistableWidth [Database.Relations.Student.Student]
  = Database.Relations.Student.$fPersistableWidthStudent
instance Database.Relational.Query.ProjectableClass.ProductConstructor [(->)]
  = Database.Relations.Student.$fProductConstructor(->)
instance Database.Relational.Query.ProjectableClass.ShowConstantTermsSQL [Database.Relations.Student.Student]
  = Database.Relations.Student.$fShowConstantTermsSQLStudent
instance GHC.Show.Show [Database.Relations.Student.Student]
  = Database.Relations.Student.$fShowStudent
instance Database.Relational.Query.Table.TableDerivable [Database.Relations.Student.Student]
  = Database.Relations.Student.$fTableDerivableStudent
instance Database.Record.ToSql.ToSql [Database.HDBC.SqlValue.SqlValue,
                                      Database.Relations.Student.Student]
  = Database.Relations.Student.$fToSqlSqlValueStudent
family instance GHC.Generics.Rep [Database.Relations.Student.Student]
  = Database.Relations.Student.Rep_Student
"SPEC/Database.Relations.Student $dmpersistableWidth @ Student" [ALWAYS] forall ($dGFieldWidthList :: Database.Record.Persistable.GFieldWidthList
                                                                                                        (GHC.Generics.Rep
                                                                                                           Database.Relations.Student.Student))
                                                                                ($dGeneric :: GHC.Generics.Generic
                                                                                                Database.Relations.Student.Student)
                                                                                ($dPersistableWidth :: Database.Record.Persistable.PersistableWidth
                                                                                                         Database.Relations.Student.Student)
  Database.Record.Persistable.$dmpersistableWidth @ Database.Relations.Student.Student
                                                  $dPersistableWidth
                                                  $dGeneric
                                                  $dGFieldWidthList
  = Database.Relations.Student.$fPersistableWidthStudent_$s$dmpersistableWidth
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

